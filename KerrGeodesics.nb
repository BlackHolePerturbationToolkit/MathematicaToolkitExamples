Notebook[{

Cell[CellGroupData[{
Cell["Kerr Geodesics", \
"Title",ExpressionUUID->"0f1b5dd4-af38-4ec9-9c68-c3552143acb9"],

Cell["\<\
The KerrGeodesics package provides functions for computing quantities related \
to bound timelike geodesic orbits in Kerr spacetime. The package is part of \
the Black Hole Perturbation Toolkit (bhptoolkit.org). Before using the \
functions, first load the package:\
\>", "Text",ExpressionUUID->"c435dd41-e3a1-4ee2-b572-31559b6e8453"],

Cell[BoxData[
 RowBox[{"<<", 
  "KerrGeodesics`"}]], \
"Input",ExpressionUUID->"f68c0a58-b336-451c-b19b-4fa1b91985ad"],

Cell[TextData[{
 "For a given black hole spin a geodesic can be unique parametrized (up to \
orientation) by the orbital Energy, \[ScriptCapitalE], angular momentum, \
\[ScriptCapitalL], and Carter constant, \[ScriptCapitalQ]. An alternative \
parameterization is given by the semi-latus rectum, p, orbital eccentricity, \
e, and an inclination angle. There are a few inclination angles used in the \
literature. In the Toolkit we opt to use ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "inc"], "=", 
    RowBox[{"Cos", "[", 
     SubscriptBox["\[Theta]", "inc"], "]"}]}], TraditionalForm]],
  ExpressionUUID->"2136ff89-1153-42ce-9ac4-04cadc9fb611"],
 ". The angle ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "inc"], TraditionalForm]],ExpressionUUID->
  "76df8e44-936d-46ae-9d5d-e20ce302222e"],
 " relates to the minimum angle obtained during the orbital motion, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "min"], TraditionalForm]],ExpressionUUID->
  "6aa73436-afeb-4ab4-84ad-d75512f929f8"],
 " by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "inc"], " ", "=", " "}], TraditionalForm]],
  ExpressionUUID->"b8e85b47-e9ed-4131-bb19-3f8bb05744d8"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[Pi]", "2"], " ", "-", " ", 
    RowBox[{
     RowBox[{"Sign", "[", "\[ScriptCapitalL]", "]"}], 
     SubscriptBox["\[Theta]", "min"]}]}], TraditionalForm]],ExpressionUUID->
  "1950ecc0-6092-4555-b7a7-905668806f6d"],
 ". Equatorial prograde orbits have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "inc"], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "7ae98cb8-76b2-425d-ad8f-4a07c1fd68e7"],
 ", equatorial retrograde orbits have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "inc"], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]],ExpressionUUID->
  "48fc8cc5-78fb-4971-90e2-bc5b4abce668"],
 " and polar orbits have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "inc"], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "ca7cd96b-1149-497a-a2b7-08c772f4b563"],
 ".\n\nFor all orbits we take ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", " ", "a", "\[LessEqual]", "1"}], 
   TraditionalForm]],ExpressionUUID->"86615a3d-7f29-4f30-a1e8-f0ce43796852"],
 " and use the inclination angle to differentiate between prograde and \
retrograde orbits."
}], "Text",ExpressionUUID->"f636aa4c-9127-4944-a62f-1ef87a3fd116"],

Cell[CellGroupData[{

Cell["Constants of motion", \
"Subsection",ExpressionUUID->"18a102d1-7238-4900-8062-23ae533772b7"],

Cell["The constants of motion can be found individually", \
"Text",ExpressionUUID->"126c6bef-c174-4623-92d7-1e6bbd9f146d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"KerrGeoEnergy", "[", 
  RowBox[{"0.9", ",", "10", ",", "0.5", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "4"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoAngularMomentum", "[", 
  RowBox[{"0.9", ",", "10", ",", "0.5", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "4"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoCarterConstant", "[", 
  RowBox[{"0.9", ",", "10", ",", "0.5", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "4"}], "]"}]}], 
  "]"}]}], "Input",ExpressionUUID->"7d894a01-5f2c-4b5a-bf0a-7a25a04493f9"],

Cell[BoxData["0.9642923500426207`"], \
"Output",ExpressionUUID->"ea5509d4-a910-4086-baaa-51871555fd1d"],

Cell[BoxData["2.526020889476346`"], \
"Output",ExpressionUUID->"3f29401a-28e8-482f-8571-723ee303163f"],

Cell[BoxData["6.409188340848828`"], \
"Output",ExpressionUUID->"9c78b9f9-e2f8-4a04-b0d0-bb3d6dad46e5"]
}, Open  ]],

Cell["\<\
They can also be computed together, and at arbitrary precision\
\>", "Text",ExpressionUUID->"4aa54258-17ad-4f42-bc75-8c2327448fa8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoConstantsOfMotion", "[", 
  RowBox[{"0.9`20", ",", "10", ",", "0.5`20", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "4"}], "]"}]}], 
  "]"}]], "Input",ExpressionUUID->"bd4f06b2-b85c-4b2a-884e-4cc66dc77ccb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.96429235004262073804962355095544876757`18.84394110765708", ",", 
   "2.52602088947635072606424698557283615642`17.18129949157711", ",", 
   "6.40918834084885240794477281632654817768`16.881638713356683"}], 
  "}"}]], "Output",ExpressionUUID->"44f2eeb1-a7b5-411d-aeb6-4afc0320df8b"]
}, Open  ]],

Cell["\<\
Some cases can be evaluated analytically, e.g., Schwarzschild orbits\
\>", "Text",ExpressionUUID->"202bdbac-6f3d-4ad6-b84f-eca1257bb778"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoConstantsOfMotion", "[", 
  RowBox[{"0", ",", "p", ",", "e", ",", "1"}], 
  "]"}]], "Input",ExpressionUUID->"8661feef-248e-4377-9c05-b18ead5f6348"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["e", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
     RowBox[{"p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "-", 
        SuperscriptBox["e", "2"], "+", "p"}], ")"}]}]]], ",", 
   FractionBox["p", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      SuperscriptBox["e", "2"], "+", "p"}]]], ",", "0"}], 
  "}"}]], "Output",ExpressionUUID->"f1b9e0c8-5b30-4f59-bd01-098d8146ec7c"]
}, Open  ]],

Cell["Or polar, eccentric orbits in Kerr spacetime", \
"Text",ExpressionUUID->"42d292ea-02fd-4216-ac3b-3f711b11a3a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoConstantsOfMotion", "[", 
  RowBox[{"a", ",", "p", ",", "e", ",", "0"}], 
  "]"}]], "Input",ExpressionUUID->"3546b65e-201a-4bfa-baf2-76f2e2d7aad3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox[
    RowBox[{"-", 
     FractionBox[
      RowBox[{"p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "4"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["e", "2"]}], ")"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          SuperscriptBox["p", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", "p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p", "+", 
            RowBox[{
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", "p"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"], "-", "p"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3", "+", 
          SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", 
        SuperscriptBox["p", "4"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["p", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          SuperscriptBox["e", "4"], "+", "p", "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "p"}], ")"}]}]}], ")"}]}]}]]}]], ",", "0", ",", 
   
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["p", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["a", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["e", "2"]}], ")"}], "2"]}], "+", 
        SuperscriptBox["p", "4"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", "p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "p", "+", 
           RowBox[{
            SuperscriptBox["e", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", "p"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox["a", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"], "-", "p"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", 
       SuperscriptBox["p", "4"]}], "-", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["p", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         SuperscriptBox["e", "4"], "+", "p", "+", 
         RowBox[{
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "p"}], ")"}]}]}], ")"}]}]}]]}]}], 
  "}"}]], "Output",ExpressionUUID->"20de4c9a-8d86-45a9-b737-ef7b174a56ee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Orbital frequencies", \
"Subsection",ExpressionUUID->"eb71e93a-1db0-4a17-8bda-683905a817de"],

Cell["\<\
By default the orbital frequencies are computed with respect to the time of \
the asymptotic observer (t-time in Boyer-Lindquist coordinates)\
\>", "Text",ExpressionUUID->"fc733de9-e890-4f18-be42-d966f8a64d25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoFrequencies", "[", 
  RowBox[{"0.9", ",", "5", ",", "0.7", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "3"}], "]"}]}], 
  "]"}]], "Input",ExpressionUUID->"f72fb2ab-2e12-47d1-b888-8e640f56ae2a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.018992219530028744`", ",", "0.04726757166002216`", ",", 
   "0.05681330201906578`"}], 
  "}"}]], "Output",ExpressionUUID->"0e6c1700-3ad7-4f16-baad-4f55a86917b3"]
}, Open  ]],

Cell["You can also computed them w.r.t. Mino time", \
"Text",ExpressionUUID->"84afe2b9-a712-49ac-86d6-8c206e69049d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoFrequencies", "[", 
  RowBox[{"0.9`20", ",", "5", ",", "0.7`20", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "3"}], "]"}], ",", 
   RowBox[{"Time", "\[Rule]", "\"\<Mino\>\""}]}], 
  "]"}]], "Input",ExpressionUUID->"b2ec5f44-2b51-4fd8-b486-62ab04869abc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.24365803511572096937412531683268112344`14.978255001985296", ",", 
   "3.09519881035764338221444798402034261484`15.91104198545718", ",", 
   "3.72027710851561564487972900625736041561`11.107623611982877"}], 
  "}"}]], "Output",ExpressionUUID->"d5d93d5c-1f3d-43d6-af5c-d4fb51c64bf6"]
}, Open  ]],

Cell["Some cases can be evaluated analytically", \
"Text",ExpressionUUID->"eefaa63d-e187-4da8-be9e-d4b56ad8b6f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoFrequencies", "[", 
  RowBox[{"0", ",", "p", ",", "e", ",", "x", ",", 
   RowBox[{"Time", "\[Rule]", "\"\<Mino\>\""}]}], 
  "]"}]], "Input",ExpressionUUID->"5e2da469-a611-4d72-8ab5-4035823ec02c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{"-", 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], 
        RowBox[{"3", "+", 
         SuperscriptBox["e", "2"], "-", "p"}]]}]], " ", "\[Pi]"}], 
    RowBox[{"2", " ", 
     RowBox[{"EllipticK", "[", 
      FractionBox[
       RowBox[{"4", " ", "e"}], 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]], ",", 
   RowBox[{"p", " ", 
    SqrtBox[
     FractionBox["1", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         SuperscriptBox["e", "2"], "+", "p"}], ")"}], " ", 
       SuperscriptBox["x", "2"]}]]], " ", "x"}], ",", 
   FractionBox[
    RowBox[{"p", " ", "x"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "-", 
        SuperscriptBox["e", "2"], "+", "p"}], ")"}], " ", 
      SuperscriptBox["x", "2"]}]]]}], 
  "}"}]], "Output",ExpressionUUID->"00c458e0-46e9-4316-a330-6c028f66376b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Special orbits: ISCO, separatrix,  photon sphere, IBSO and ISSO\
\>", "Subsection",ExpressionUUID->"5d43659d-96f4-4d0e-b637-cd5c1587947f"],

Cell[CellGroupData[{

Cell["ISCO", \
"Subsubsection",ExpressionUUID->"3c355960-8ac5-4ccf-8fe5-a4dc40771f3a"],

Cell["\<\
Radius of the ISCO for prograde and retrograde orbits for given a\
\>", "Text",
 CellChangeTimes->{{3.709549790496475*^9, 3.709549794704348*^9}, {
  3.709550147942068*^9, 3.7095501518672047`*^9}, {3.709550897300111*^9, 
  3.709550898850286*^9}},ExpressionUUID->"17710782-fbed-4ae5-b767-\
9e56483935f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"KerrGeoISCO", "[", 
  RowBox[{"0.99`20", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoISCO", "[", 
  RowBox[{"0.99`20", ",", 
   RowBox[{"-", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoISCO", "[", 
  RowBox[{"a", ",", "1"}], 
  "]"}]}], "Input",ExpressionUUID->"b5a145c2-f71c-44d0-83b7-d34a8b925550"],

Cell[BoxData["1.45449793805967163063770101874648865652`18.601239711049704"], \
"Output",ExpressionUUID->"23c7ddc1-0eba-40f1-a8e0-e65e9ff6734c"],

Cell[BoxData["8.97186134254696814383077242421882397161`19.391409154205732"], \
"Output",ExpressionUUID->"3cb5ffb5-f21f-4adf-b545-13b3c01776e1"],

Cell[BoxData[
 RowBox[{"3", "+", 
  SqrtBox[
   RowBox[{
    RowBox[{"3", " ", 
     SuperscriptBox["a", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           SuperscriptBox["a", "2"]}], ")"}], 
         RowBox[{"1", "/", "3"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "a"}], ")"}], 
           RowBox[{"1", "/", "3"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "a"}], ")"}], 
           RowBox[{"1", "/", "3"}]]}], ")"}]}]}], ")"}], "2"]}]], "-", 
  SqrtBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["a", "2"]}], ")"}], 
        RowBox[{"1", "/", "3"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "a"}], ")"}], 
          RowBox[{"1", "/", "3"}]], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "a"}], ")"}], 
          RowBox[{"1", "/", "3"}]]}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"4", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["a", "2"]}], ")"}], 
        RowBox[{"1", "/", "3"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "a"}], ")"}], 
          RowBox[{"1", "/", "3"}]], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "a"}], ")"}], 
          RowBox[{"1", "/", "3"}]]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"3", " ", 
          SuperscriptBox["a", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["a", "2"]}], ")"}], 
              RowBox[{"1", "/", "3"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", "a"}], ")"}], 
                RowBox[{"1", "/", "3"}]], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", "a"}], ")"}], 
                RowBox[{"1", "/", "3"}]]}], ")"}]}]}], ")"}], "2"]}]]}]}], 
     ")"}]}]]}]], \
"Output",ExpressionUUID->"95264079-a6f0-47ad-a2cc-98541c6c1a2a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Separatrix", \
"Subsubsection",ExpressionUUID->"7d17be73-0d07-4344-aae1-b9837be933c3"],

Cell["Simple cases are known analytically", \
"Text",ExpressionUUID->"96db98fc-79f1-4280-859b-8d504ddc8e26"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"KerrGeoSeparatrix", "[", 
  RowBox[{"0", ",", "e", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoSeparatrix", "[", 
  RowBox[{"1", ",", "e", ",", "1"}], 
  "]"}]}], "Input",ExpressionUUID->"3c7c9bb9-da41-473c-8c0a-00ce46cd4813"],

Cell[BoxData[
 RowBox[{"6", "+", 
  RowBox[{
  "2", " ", 
   "e"}]}]], "Output",ExpressionUUID->"387f63cf-086b-403c-a2a3-a54d2cbcfd27"],

Cell[BoxData[
 RowBox[{"1", "+", 
  "e"}]], "Output",ExpressionUUID->"64a9fef8-406d-426c-acd9-847f515628fa"]
}, Open  ]],

Cell[TextData[{
 "Find the value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "s"], TraditionalForm]],ExpressionUUID->
  "16b79041-cc86-4f8b-9e2f-243972c81faf"],
 " at the separatrix for generic orbits given ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"a", ",", "e", ",", 
     SubscriptBox["x", "inc"]}]}], TraditionalForm]],ExpressionUUID->
  "fc4dd9ec-3cea-489f-b646-2d1872d9f466"],
 ")"
}], "Text",ExpressionUUID->"f472e2cf-5f16-4235-b48d-05e55030b410"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoSeparatrix", "[", 
  RowBox[{"0.9`20", ",", "0.5`20", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "3"}], "]"}]}], 
  "]"}]], "Input",ExpressionUUID->"ed4b3f5f-e1d1-4f29-9d03-809365795b6c"],

Cell[BoxData["4.34225968111274826125829387612249013844`15.387944313705123"], \
"Output",ExpressionUUID->"d3911ca8-ae29-4e19-861e-3f116e3a34f9"]
}, Open  ]],

Cell["\<\
Plot the separatrix for various inclinations for a rapidly rotating black hole\
\>", "Text",ExpressionUUID->"38746bec-9829-46e6-9c1f-414d1e585292"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KerrGeoSeparatrix", "[", 
         RowBox[{"0.999", ",", "e", ",", "x"}], "]"}], ",", "e"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "0.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"e", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}], "//", 
    "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"res", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}]}], 
  "]"}]}], "Input",ExpressionUUID->"b34ca4f7-45d5-49d9-8f55-f8f34658fa13"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], 
     LineBox[{{8.997187363735224, 0.}, {9.29233352274851, 0.1}, {
      9.578797665308908, 0.2}, {9.857645359180415, 0.30000000000000004`}, {
      10.129740563512222`, 0.4}, {10.395795304867322`, 0.5}, {
      10.656404643114996`, 0.6000000000000001}, {10.91207192482278, 
      0.7000000000000001}, {11.163227431119683`, 0.8}, {11.41024241653845, 
      0.9}, {11.653439859109106`, 1.}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], 
     LineBox[{{8.281607656235284, 0.}, {8.553053289898278, 0.1}, {
      8.816097643923477, 0.2}, {9.071776997733945, 0.30000000000000004`}, {
      9.320932178725545, 0.4}, {9.564256577821032, 0.5}, {9.802329978997527, 
      0.6000000000000001}, {10.035643013976685`, 0.7000000000000001}, {
      10.264615235612807`, 0.8}, {10.489608735113517`, 0.9}, {
      10.710938577130143`, 1.}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], 
     LineBox[{{7.554399432769044, 0.}, {7.801778501319112, 0.1}, {
      8.041076018162663, 0.2}, {8.273293752429314, 0.30000000000000004`}, {
      8.499245273569842, 0.4}, {8.71960205069119, 0.5}, {8.934925959225708, 
      0.6000000000000001}, {9.14569279804645, 0.7000000000000001}, {
      9.352309683121566, 0.8}, {9.555128162120653, 0.9}, {9.754454271369847, 
      1.}}]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], 
     LineBox[{{6.813344964633585, 0.}, {7.036221639561816, 0.1}, {
      7.251383006758818, 0.2}, {7.4597901695068956`, 0.30000000000000004`}, {
      7.662224578504321, 0.4}, {7.859331913961262, 0.5}, {8.051653050388934, 
      0.6000000000000001}, {8.23964647317237, 0.7000000000000001}, {
      8.423704868909333, 0.8}, {8.604167642151632, 0.9}, {8.78133051976823, 
      1.}}]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], 
     LineBox[{{6.05541561110467, 0.}, {6.253258824053429, 0.1}, {
      6.443809900257355, 0.2}, {6.627981849751726, 0.30000000000000004`}, {
      6.806518146113194, 0.4}, {6.9800340278653525`, 0.5}, {7.149045657804324,
       0.6000000000000001}, {7.313991243203624, 0.7000000000000001}, {
      7.475246674314198, 0.8}, {7.633137328569333, 0.9}, {7.787947132442093, 
      1.}}]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], 
     LineBox[{{5.276285091382932, 0.}, {5.448427918990761, 0.1}, {
      5.613773949157069, 0.2}, {5.7731788480787385`, 0.30000000000000004`}, {
      5.9273408336374445`, 0.4}, {6.07683894020696, 0.5}, {6.222160043723353, 
      0.6000000000000001}, {6.3637184420168005`, 0.7000000000000001}, {
      6.501870356941886, 0.8}, {6.636924883368546, 0.9}, {6.769152396250924, 
      1.}}]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], 
     LineBox[{{4.469391648820982, 0.}, {4.614961758682606, 0.1}, {
      4.754326918564497, 0.2}, {4.888273387508425, 0.30000000000000004`}, {
      5.017444697261283, 0.4}, {5.14237626898646, 0.5}, {5.2635198682705955`, 
      0.6000000000000001}, {5.3812613253531865`, 0.7000000000000001}, {
      5.495933659200357, 0.8}, {5.607826984483883, 0.9}, {5.717196116378571, 
      1.}}]}, 
    {RGBColor[1, 0.75, 0], PointSize[0.009166666666666668], AbsoluteThickness[
     1.6], LineBox[{{3.6239216406717145`, 0.}, {3.7417111129253806`, 0.1}, {
      3.8540295865811838`, 0.2}, {3.961576981387572, 0.30000000000000004`}, {
      4.064929222409458, 0.4}, {4.164568253146432, 0.5}, {4.260903263304613, 
      0.6000000000000001}, {4.3542860791745674`, 0.7000000000000001}, {
      4.445022562354239, 0.8}, {4.533381210092986, 0.9}, {4.619599750580978, 
      1.}}]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], 
     LineBox[{{2.71989821955761, 0.}, {2.808102509675302, 0.1}, {
      2.8918398357459654`, 0.2}, {2.9716969185280737`, 
      0.30000000000000004`}, {3.048165080450619, 0.4}, {3.121663253863929, 
      0.5}, {3.1925546246616365`, 0.6000000000000001}, {3.2611589309716127`, 
      0.7000000000000001}, {3.327761745356501, 0.8}, {3.3926216296571163`, 
      0.9}, {3.455975769739671, 1.}}]}, 
    {RGBColor[0.571589, 0.586483, 0.], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], 
     LineBox[{{1.7233835486599256`, 0.}, {1.7800615605298193`, 0.1}, {
      1.8354398562549545`, 0.2}, {1.8900912788460045`, 
      0.30000000000000004`}, {1.9448006391443218`, 0.4}, {2.0005282322617686`,
       0.5}, {2.0583727724094145`, 0.6000000000000001}, {2.119475320338886, 
      0.7000000000000001}, {2.184840123931948, 0.8}, {2.2551194902751526`, 
      0.9}, {2.3304786106697626`, 1.}}]}, 
    {RGBColor[0.915, 0.3325, 0.2125], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], 
     LineBox[{{1.1817646130335644`, 0.}, {1.2430089335987424`, 0.1}, {
      1.3274250270367798`, 0.2}, {1.4207273698679803`, 
      0.30000000000000004`}, {1.5181293631592625`, 0.4}, {1.617728860512183, 
      0.5}, {1.718638259966163, 0.6000000000000001}, {1.820390628012786, 
      0.7000000000000001}, {1.9227174298783185`, 0.8}, {2.025453364494286, 
      0.9}, {2.1284911064069143`, 1.}}]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImagePadding->All,
  ImageSize->600,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 11.653439859109106`}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{
   Automatic, 
    Automatic}]], \
"Output",ExpressionUUID->"a55770e0-9c5a-4374-8394-71963a23cbf1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Photon sphere", \
"Subsubsection",ExpressionUUID->"0ac0bfb4-93e6-4ec4-b05e-baa05b3b6889"],

Cell["\<\
The photon sphere radius is known analytically for a few special cases\
\>", "Text",ExpressionUUID->"b3e6cdde-641d-41a3-8558-7896c952b450"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"KerrGeoPhotonSphereRadius", "[", 
  RowBox[{"a", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoPhotonSphereRadius", "[", 
  RowBox[{"1", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoPhotonSphereRadius", "[", 
  RowBox[{"a", ",", "0"}], 
  "]"}]}], "Input",ExpressionUUID->"05bcc74f-b270-4428-be7b-eef3169928f5"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"ArcCos", "[", 
        RowBox[{"-", "a"}], "]"}]}], "3"], "]"}]}], 
   ")"}]}]], "Output",ExpressionUUID->"f40af6fb-95bb-49e0-9fba-3ae9ee4666f1"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"x", "<", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SqrtBox["3"]}]}], ",", 
   RowBox[{"1", "+", 
    RowBox[{
     SqrtBox["2"], " ", 
     SqrtBox[
      RowBox[{"1", "-", "x"}]]}], "-", "x"}], ",", "1"}], 
  "]"}]], "Output",ExpressionUUID->"6c8d9342-772c-4ffc-9db6-98a4a0e62cbb"],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     FractionBox[
      SuperscriptBox["a", "2"], "3"]}]], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     FractionBox["1", "3"], " ", 
     RowBox[{"ArcCos", "[", 
      FractionBox[
       RowBox[{"1", "-", 
        SuperscriptBox["a", "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["a", "2"], "3"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]], "]"}]}], 
    "]"}]}]}]], \
"Output",ExpressionUUID->"d510fdc4-fdcc-456a-8d13-bb886ce8649f"]
}, Open  ]],

Cell["Evaluate it numerically to arbitrary precision", \
"Text",ExpressionUUID->"67f36cfb-0b64-4759-bc38-37b08743166e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoPhotonSphereRadius", "[", 
  RowBox[{"0.998`20", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", 
     RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], 
  "]"}]], "Input",ExpressionUUID->"5a395a21-bd5c-4004-b9a0-89ad032e0258"],

Cell[BoxData["3.55419833584976250315118513251415497432`19."], \
"Output",ExpressionUUID->"11e146ed-c09d-43ef-bf9c-e5c79ce665b9"]
}, Open  ]],

Cell["\<\
Plot the photon sphere radius for a number of different black hole spins\
\>", "Text",ExpressionUUID->"74b65a6e-d8af-47f3-9e6f-918f540ca9c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"KerrGeoPhotonSphereRadius", "[", 
       RowBox[{"a", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}], "//", 
    "Evaluate"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], 
  "]"}]], "Input",ExpressionUUID->"623a293d-c789-48b7-b919-939fbae75170"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQrWcv9ur///f7GcCAwyGo/exq43gEv/x8S276vndw
/pUr3K8OJr6F82UP5IuYy7yB87dmH2Hlv/sKzk/oMfxws+klnP9jUnXHfvsX
cP5ivnuSMx4+g/PneBkWXe58Cuc35SRWaHo+gfOrmVeVF719BOcnNpxXubbi
IZw/de/TGXOyHsD5u+5r8KxRugfnKws4OIXMuw3nb9LqyHr0+Aacf//oRgUz
s2tw/lOdqUb7t12G8wXrVprpMV6E83XM3uss/XwGzm92eXthZ8VxOF80ZN2E
SPFDCPu+HeU/obILzl96+2nvy5Z1cH5soMyW28lT4PydXNVXD5VOtofxTR8x
yjVGrIfzlT/s/ml1aCec77n45lm/iENwvquvEPPXrcfh/P746w0G28/A+cf9
ZHkDhC7C+W8VResuzboM55eWaCf2i12D86/fEQhKO3EDzk+otHnO7nMbzj+s
bd51mPUenK/GuefFEo8HcL7snmxX1o6HcD7DL6aVRY8ewfnfA/fGHVV9Auff
NomXVm15CucXhAsIKt15BudLTnkSwSL7As5fF71g+eeKl3B+uG29x4m9r+D8
jXG5SlZ/XsP5P7icmXeGvoXzgy5am8nOeAfnO3BoTuDzeQ/nQ/MLnA8Ah+/p
Zw==
          "]]}, Annotation[#, "Charting`Private`Tag$2725#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1Hs01GkcBvBhOO+7lOsiRI1BkjpSrum83yVNyrQlrZyp3E6UUpvdDN2T
NlqXCnvctq1QxM5UuyXXl5GoOCXXImEQU+ZXdHHb2t+es3885zmfv57/Hl7I
Ad9dqhwOR8jmv15GDBVfvzJ0f+QZIX8Ew4EpfsLUNEMtHd42zr7GcPOv5dYT
Hxna8ixuTQdrBxthyPAbhmpKiHsia2fd+BdNnQx1m/i8lBnGAPL3j7KkDP04
GWpSMYTB92xz8YpAhsL4CqMtcgziJ/GR4dVKev0e98rpXgxtbZqK2uAxetZb
jTevDYNZzYFvnee/pRmXvf4IeoThzt776tovFbSoWfShpwZDUNLyd8/jRunV
9OuClLsYJi8eSaBkhG5/YDM+XoIhT6vXOLN/mE7JsgXJVzHkrl8e1Zo4RJ+o
OT4WZWKI2xccs9h7kJaoJ37qScFwhHtDHDU2QEMyw4vT4zEEn3xi2VHYT3kL
mqRfDmPIqBrKzI3oo+WWKg65BzGUv7KZU2LRS0X2/qYHwzHwdcDD71I3zeGk
X/28A8Nt24SIAXkXffDlJ8HdLRhe1d9a6OTUQU2ca+oLvTEM2WU40LutdIO7
eJEPYNA9XuS0TKWF8l3qL9g4YbBzYuwKJpooz/r2qTt2GE6vGXtaFtNA143+
4HLUAoOBn+R8gJGM+mV15kTPY/c+1Ws3WpZTkWeEbKE2hoLuoeTReAkV/hOQ
r66OYcfm+X93h6ZTJ87R11kzCMo0jrTLDqWRmfLH+sHjCBwHVMxPbZOSVaZ1
ytARBPx3FVNusjJiwV8bZvAKgXfe8+aN22REbnzfj9uOwEuox/14p4H0+aic
t3yMIDWw86R9aRMhJolZE7UIGjaazd2k10IeKk6bcu4hGOMZHH+W3UqO6U9w
yyUIDv28JDjVsINwen/Zc60AQWePjm9YYxfR+hoiaMlBEBTr/hr5dJOSleKK
wosI6pY4n6tT7yWyLYcO0wQE1t9UjuSv6yNh3NTQuBMIzCr3eqkn9BMt17RU
cTQCzrRqUdTAAEm2Ndf5cx+Cz5urdtZbDRL7Y4YDyaEIulcGmlrFDxE7Txe5
NADBj/46uhY9w8RUUXVRbRMC4/TBbWpmIyRgl+QmV4BAIrp8fSJmlHinCQy9
ViPwX31iXWOVgvRlDIrtVyK4tTPSwm32DblwwzZPuATBpIYnt2zrGMkoPGYn
4SHwbVnlZJapJJHfqzaXzkOgsUqztvJ3JUG7ZS2prGvzX2zYnqckM087OsJZ
28fEBudIlOTKpdl+I9ZaC0qTjOuVRHe3+6zYCMHDfQ5yg3Elya1OARdDBIAX
n9fyYYjNgxRcps/uH5w0kWxmyKfol0YXWEu7GwqE/gzh1J1ctIe1uTSsIimE
ISOO9QJj1rNb84c1YhkS0OiVFKuHoDRvwWp0jSEeNxZZueki2D+XabhWzBBq
Veuqx9paXO279hZDfg2WblToIEhfv2P3mUqG8C3PxWazjnqfncZtZch3Bq6t
09oIbEUR5nldDGlrj1E8Y91/37XIo5chnnvmqhaz3pTZVX1qlCFz9B0dRKyx
aqE3j2GIfGnj+hWs6V5xW80Hhiy1uhmqyTq6fW1g0DRDfGbeHpVrIfj/v0jK
7eO/VbD+F+BjNiU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2725#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1Hs0lHkYB/CRei9SDUKqwTSNLakV69Lt/J6SToSNzVJCSG0oa7oMOZsu
WNnpZDctlZwyVKJRU7Iy+UVpbJHKyGUk91AzL9ncsmvfPWf/eM5zPn98z/ev
5+GHRvuET+NwOJ7s/LdXIJOBqSkGG4qTCn2qaYgeF6SMTzA4SIRoXda37660
Gv7M4Az983vuKmmwW+IZ2vuBwX+7GgnmsnYySGypaWSwtH+ntKGKBugaenah
iME5Lcsr/B/T4PNzbYF9MJuXzRIFl9Mgrkvcv7dciwc4OgUH7tGgUs0cqAjR
4GY7r6T+bBp4j6LnOi38iCfDKy1aU2kojnwyY87bAfxs+eeMdWIadklWDjaf
7MfhtvJBTigNY7/Fp2DUh4+G1wlXe9Egnd1mltnRi8Nj+GWNzjRkua8U1Z/u
wTHvhnCPgIaTUSGxS9268Znntul7uTTE694UizSdWFVvaOn9hYKQ43WL39zo
wIeuSo7eek/B+Yc9mVkR7fjR2xUusSoKHrxbol+4qA1XvkixlmEKBFzYsC1b
jbdEDMm3FVIgt06J6OxqwmLfS9b7Mih4V3XH0tHxDfa221erOUlBj815O3y/
Hsv70ovboykwOJbvuELnFR6M4nm6BlBg48jY5A3XYLVLuI7pZgpObdS8LI1V
4tvPeTGB9hQYb5OlbTetxPyusX+MLNi+kao51Ysf4P1mFiYO+hTkqXvO9CfK
cPGRmSMvRkkI9F54Tx2Wjk+1Zs1/3U1CqV58Q+Xhcyhh5KBqw2sSHDp1zE/4
F6HsgHaRbTkJgsGy8dWVpWjcrjsrsYAEN2lzrZd/JVoi4HK3Z5Dg6mmo+7lY
idY/G+FfPkXC2eDG47YlNagpIKRuYwwJSi/erK2Gr9B1+aBLTCAJGr7xsdcX
69HRML32KXcSDh9aFnLW5A2q+RRp/8WZhMZWrs+e6iaULLJsShCSsCtu7XvS
Q412yxMkYUYkPF7mlPp4Rht6mt27VTVFgBWt6Mvd3I50u0+k5WgI4CkiXWek
dKALx+1N36oJ4ExMyxd1diJt0u3k/GoCRr0fBlUJu9G+qx9NX94nQP1N8AJh
Yg+asJGkSaQE/OjHNVjU2otC4xyulKQRYJbe7T+d14ckNw84r0ogQBZw5fpw
bD/61WPnqG8UAX7rEjZXPxxAxy52HVTuIOBO0P5Fqyc/oNxRq09SNwLG9Fx0
S301iMSKVksnAnxerXHkZWrRd7V+FVohAXprZlYoLmvRkaIwYQ7rityWLTul
WsRxHEn1ZW0bGxdySaZFyT8V7VAsJmC2RYnErEqLhriH9VMFBPwZZddl/EmL
GswDS4V8AoBamjbbg0HCuK9WBS1k+2PG5su8GXTm6+UvDFgXqZV5nn4MejpU
trtqAQHmRXvKJKEMUvce+t2G9aRvbq9eHIOmCr/X/2JGQInUYh15jUHNcQPr
M00JODCLUV4rYJDh4GlmC2srcbnPpjsMysm7mz1lQkC6e+APSQoGrV1wTWcv
a9HQxXO69Qy67k63OBgTYB0QYS5tYlCFavJc/1wCOp6syt/QxqBbTvHfXma9
NbOp/EQ/g4ZV855PZ01Nu+HGZxgkd3D+5Q8jAnCkWPXoLwbNUXR6RLE+0rAp
eNcEg3bEz+Nasv7/f6GC5Gb2hAn4F7qRRZU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2725#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1Hs01GkcBnCX/c3l5zpC2Qy5lqSY3TWnpPe7WpaiI4dj2i4aXTeipIZs
mi1qtsPRhVa5bBalC5OsrKLXJZctTmkyZMp1xrWZN6yoY2tnz9k/nvOcz1/P
f49dZGzIHj0dHZ0gbf7rlchy/PNngm+Ns5OSC2iI/eAg+fCR4BP+DWH6Wt+t
8HCeniG4SpjuIblGA29ZUOTwBMGrvLe9vfAbDXxOSk9bF8Hm8r6Y4jwaYGjy
yRUpwX5p2TfartAQcrb99lcRBLseuja6+CINomcpB/c90mD74Cxp7SkaXr40
GK8XqjEnrzbnuJAGbl2sOd/6LZ4aERuf9KGhMuoxZfJmHNvOcn/3cKRhZ5rH
u1enxrDxURN6vz4NcxeTJBiNYsFhX5chJRsKjXutsgeGceqiZv5IIxtyN3jE
yX5RYTezbV55hWw4FS1McAlQ4pip+JbMVDYk6d8SxakHcRcjYIf1HjYIxc8c
5SUDmCHqpJR+bMiqVWXnHujHR2qSKn5wYcODvmWGd+x7cda8qGc/mw0OpuAT
mq/AuemKxIoJFtxbLjkwONSNzYoFj3OesqCvqXyJp6ccD3Qy8vh3WKBakcXD
92XY5mpTv0EGCzjJNz1X6nbgfmFoxJlYFqzwJCuKp9vwusCqSH4IC05/p35e
ndCC+9qfFWTxWGARWnZ+y8IGbMbNfVKyQLv3vsmk1fEBttbtaVa/Z0KxQpU+
llKGF6zLKRjrYsL2zdZ/KHZl4sbF0wstHjKhmk7qbDh6CUWfDWJP5jPhm0Fd
m58FUlR3L0KWLmaCw7uHH9Y0VKOn0tK50N1MCCh81b5J0ICiMoO9Vb5M8A0y
05+pbEG8iplG12VMyIjoErtXtSFR842my4ZMaNnENQo260DMmAI3uYYBajuL
5BdXZcjNeoE3X8aAo/GuwgxLORKfaB31/5MBXa9NQ/a2diMfVnfGmhwG7Exc
O8IMVKAXLGX492IGNLryzzVSvYh3f6LUexcDnNk1o0X+/ch3992Bjf4M4NZE
+VKSAZRR76amVzJA56PezbjBQfRcoHKv4zBgdnPtjiYnJerRxChTZylQfB2x
2ClFhXx5EghUUHAo3JRj/3oY/Rgeip5gCqwylYIvuKOoJi8uLvg6BWVbr92Y
ThhDspNrv1WdoyDc+6R/a+04yt0VxEs+TEH5joP2a+YnkHtKYFGzgII5er1+
dZgaLZo0f+q6joKQDi9PbrYGJcTcMUtzooD2MqivydMgTl/jBRut64t6Nm4r
1KDVjHbzckcK3BMShTllGtR3vNJZ7kCBsW1VmlWTBo0YDicusafgr2jekMWU
BoX6fXpTaUMBsFzOGwcSJHnRnj+0ULt/eO7Lss0EOc1k5x7TWqpoKQ4KJ+jT
q+35bK1tpHsfpkUS1DHeWbrKkoL5sKJhOpEg5HpmPsmcgqpCW2/mdYIcXWy3
WHAoiDEiLddvE3T7SNHlElMKnEWPQvzKCQLx0m4vrTM3bN+fWkMQ6V26L9KE
grjJq5f0ZQRZli6qlBpRsHzrAZvCboLe6F0yW6/1wOPVN316CTK2MoqXG1IQ
nN396OcxgqJTddf/Y0ABS68kwI4QpLf1p7vntcZRopd1fxPUTGbtHLU+1ukX
sfMjQWGn43+toin4/7+QIGzKdKPW/wI/lDle
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2725#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1Hs0lHkYB3C875hbuaaS+6UbjqiwpP09Kwob4iSzW2F0SJOWZpNx7LZp
1RKly9h16eIcw7q0rhsp/HILpdu6JMOU0cilmVdELpWdPWf/eM73fM5znvP9
7zELiw4IV1NRUfFRzn9pi1aOLy1R2E+6y4t3gg3R8xbJ8wsUjrznF9X4IxvK
q+zXTc9QONi66dJqpTdv8AkbmaDw6N23gw+Os8FJO6m/8wWFdWiuKRbRbIDh
9w+zyiic+MDVcvAIGwJ+e1yyJUR5f871mH8IG+KeJh073KDAh2ucOV97s6G7
mz3eyJVjq6H5+VxDNhjdj17hZPgOn+zsSLOYYsHtoy00zcFxHM7NXRS2syA0
zX7y5ZkxvG0uL+pGDgvmriQkYzSKc8qr2K3HWZCnIdHPHBrBj2+6l6S6s+Ca
tz2/K0WGw4XLLT1Xs+BMFFew0esNTsoI5htTTEggiuP4cil+uEszIreJCdzT
Ty17C4dwYMzMK5csJmTUyzKv8V7jTU7ZwvYYJtx9tWHZLXMJbrQIO6PhwQQL
LXDbe0OMqzs0eyINmVBplcyTDvdhmfm+z2cnGfCqtcLU0bEXdxvWH7jZygCZ
TcZmXN2FfRO+t2+/zgDtU0WOtqrP8cfxE+bNfAbYOFI2+dOd2Cb1q/hH3gz4
1V3+rFbQhvV3l1+sNGGA3t7SS9+tasIDsdR09gwdKmdbNdst72K3xdjU80/o
kC+WXRhLKsVFxTfkPBEdDvob/i0+JMRGmXM9fj/ToZaV0NMUexWtt52otgui
g4NU1TiRU4ZCN9Un69nSwWLy3rxLUy3ydDE9+JFOB6+8l499OU3ozojIVC5R
Bw8fHWLmdhtyJqKEE9XqkB7y4rRdTSdaz9C0k1xWhzZfo+V7dJ6jzIeHNi0e
UQe5md6pf7K7UH7qMm+GhzrEnrDmpq/sRR4GLl/0zNThxYBWQER7HyrcYJMS
vkCD0HjXt/TdYmTqJ8rI7qVBs7XT+WaaBPmRKcOW5TRYx6wbFXm+Rt2zixfS
02hgVHfUg5Y8hNwmeeLPR2igsqBWxJdKkcGSeZbYnQYf/euDW9e+QS9VHzWk
mdNAvDXEYG2SDDlz3CVNn0mICdLSNh8YQVf2pn9g95OgL3zDIY1G0Y5+bYF+
LQml+3P/nBaMIVraPLMjg4Sg7b94ttePI8bAuRyHWBIqgo+Zu3yaQIWSYL+C
QBLmWDuI2kA5khF/HOrdQkLA822ORpkKFGhyWbtyBQmsbezGuusKZDX1dmK9
0o2i/m8P5CmQLuebJ9d1SbATxHNzShXo9zVfilN0SNAwqUnTb1WgXZZlLVwt
EjqiNg/rTSnQVc+oeN1lJABj4yWN3RRi3HF49xOh7D8+t6bUn0KJ76faptVI
KBO35fsEUeivhJYSntLGZRH30sIodLqqIJWjSsKnQNEIK55C2UTcra1LBNTk
mWynF1Bof0QjX7FAwA/LqbaCEgqtcqE9C1d6XVxDwM4KCpWtinAYnCdA6H0w
8mwdhdYYJK7unCOA/z77KtFFIUGkNRTPEmC1n2ec16fcV0RIzJQeanEucpNQ
KGZfc1LWDAF7MvsaEscoJJJIx5I/EMBQK/Qyoyg0011QqKI0PhrXff8DhWZ9
L0YLpgk42bMzJHSBQrq9WV9PThHw//9CVdMdepFK/wvEmEkK
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2725#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1Hs01GkYB3D95n4hl1haVEK5pKilzeZ91FJs2kwpu21uXbZNsUYaHaeo
tWs2Wm1GZxa1aURWa6KL4/pm0KhoGqRhMgwRU+YnstHW2tlz9o/nfM/nnOc8
53z/eZbExPP2E0ZGRiGG+S89kJVubo7EdqN32qv8uRA/u1Q4+47EWb50137g
wo2bns5T0yQOtOnMoBvstTwkZuQliaXakU1hflzwMUvvbXtK4vZSo97JdVyA
odcPfpOSODs2JNBjDRd4Ge1lqyNJLLyu9C925oJAkX7k2wY9TsnXqfI4XOjq
4ugao8exm/hsgLGSA3Z34xf42L7Ca+MzRSfyOHA7tpk2v0+HTbXmm233cyAq
y3Oi5/QYLpaJju5048DM+RQhRqO4WVDkdHaaDRITjY1YO4JXcmfufVfLhoJg
T37nz8M4ifzn69TTbDh9ODrZJeg59tA/i8sOYUMK5Q8Bf3wQ08zpmWEL2BCd
pnDsvqbFbP/ECct+FuTWD4sLDg3gvTLcY1LGgpr+5dzrDho8kFw8quCzYKkp
bNhxSY0T6hN9hH4sqHQVHhocUuEPUgs/azoL+lsqFnt7d2NLC0EP+YgJw+65
XvhOJ7bOeVNQk88Es5Ol3h7zlLgwd+Di0X1McPcm3a9OtWFea17NYk8m/PD5
+OPqZDluTM7rU8wywHJH+bmvPpLhMXmpsqOJAZV/tcxvdazBVh2CycZfGXBV
PXx2LL0cny8RFCp3M2BPqO0t9V4RlnAPFj50YUA1O+WJLCkHlTiZVFvO0uGT
wXn2p8KlSKRrunG5mQ5LJ2pn18mqUUxLdb2xiA5Bkp72reEy5Oh1bLo7kg4B
IeaU6dtyxGLzapkr6JAd+TRtVVUbOrOj7YPZPzSQb7Uz3mauRH20S8a/P6TB
+BLLkx15nSjsuvDLuQIaJB11i8626kZzb+MycTwNnj4z5R1oVSGXnWlNKxAN
oo5/9oKxRY32Kkw6o8xp0OTmc6aJpkHu27z79w1SwZlVN1q0eQBNkXEOy+5Q
wa4uNoAm1KJN4rf87ZlUMHpHlPIHB9GtR/aytD1UeBtaH9Hi9Byp4/WXwldT
Qb0m8mOn9GEUNJMvC6dT4ftdpmYOz0ZQaJL7PG0vBWxEz8OpdqNooaYs6+9K
CpTvvlwylTyGxlNLMxKFFNi1PnVza70OcRe+SUmIpkBFxBGHde9fIu8/Xac1
vhSYYW+kVIeNI37qypsaCwrwlL7edmI94l3ZhANIAti+nMa6i3r05N6JSYme
gMai3i++kejRT6lTqwmDVyUfj84v1yOr7YXahlcEmCyqyrJp0aOA6UWja3UE
3D/sNWQ5qUfnExKvrBwmAJgu50y2kKjbsaJjmZqAmYSZheWhJBq6fUGR0UuA
VC2/GrKLRNbBqt4XPQTYSw/UZsWQiE/yba+pCHgfVjTCPm4wst/i0k1AlWTR
ekYxifpWcSM8lATEGZPy4jIS2ZZY+2c/JsBZ0MALrCDRLfyL14SCAFHwnoM/
1pFI6lkLlY8I4L/Oy6F0kkid5M72aSPAdfche4mKRFMRF6PEDwnQNn9aukFD
Ir+cky2zDwjYJlY1nBojkYVrbk3dfQKYxLWgJaRh37Mt2N5gHCvouvvGcF9x
bCy1lYBjTwIjo94Z+nblXtDKCfj/fyFs7srbaPC/TsFTHw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2725#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt1Gs01HkcBnD/uZm7cmJTpkI3ZStapNTvu8JG2EwsJbm01Z5Rm9UFXYhU
Wop1S1irBqXsDF1Wk8svgzO0bAm5lRiXdZv5s9iGtNaesy+e85zPm+flYxR4
QniYoqWl5Tqf/3oD0h+emyOxreHv2WoWD05Mm8ROz5BYczTasY/Jg6JH5qsn
pkg8+eIQ2a7NA4u1roEDIyQeLcy3r6HzwHphTEd9K4kd5DafMgkeQO/4i1tS
EtvdnM13muaC8GrDg81+JH7RZtmdN8iF0Jcxx49WqHH3yU5qoIILzc2c4coA
FW7p6c3YG8kFwfMTi6wNR3GIKC3bxJYLT4Kq6TrvhnFViO4z3xkO+Mebj7VH
D2HbDrNx40cc0CSdi8VoEK9aLGTWBnNAzO8ySO8ZwHEORXVUUw5kOZuHNF3r
x083epqXKNkQfSwgzNSpD+8/Gx21+zYbzlHvh4aolDgkLjjp2n42BFx8ufLN
vR4csFkaeX8xG1LL+9OzRN34fUPxlGMbC569X8stNO7CUklGnziJBSYLwM4j
uxNTEuImet1Z8HBdrEjZ24br/SxTNBwWvK8pXmFl9QZ/DDfszVYwod8s1QL/
1oRTiwVFa2KZsDCiwGoD0YiRkrknbycTzKxIs7yJeix6PmSuTWPCJXvVK1mY
AvsmrJWHY23Q85Ak7vtMjo2+1OSknteGh3/X6NSufIbTHgYeTN6hDXmd/deH
YiSYc9i+tOEjA3zdDR93HkrBrlsSvhopZ4CMfa5FfjoZ+a/hyx5HMcBSSSyL
8paia794T44CA0zGSqe3ymXoH24Eh0pngJO4vcHNW47kqnu6j6rp4OCqS516
okBNo5RTW6/QIcGv9eKmknpUuZc9nuZCB4WbgLdHtxFV27aX/MGng8pIL+J1
RhPKD0wsbG+hwelT6wMS9N8g/1vJek+zadD6doHwSG0beqVm6csO0cA/3PZP
bZdO5DS7/eaFz2lQtd76xyp6F8q8cEonZ4IKq1llg7m7upGQfz4nsoIKgrIg
B3psD/Kwpi11iaOC1gylIESpRKlGSW51HlT44F5+sGZVH+odM5IPGlOh8wu/
pati+tHJ2/qTH1UUCPZasND47QAKuv8py6KUAgYpfd40wSAaNnJPGIingMQn
5+5E2BByVjYKBn0o4LU9cldt+TA64GY9KtxIgeKDx423zo6gpHcfXGQ0CmjY
O6kyTxUSeM7drmolQNi4zUqQrkb7yG98KFIC2Ns4lWU/q1FVRBzjawkBlbkd
uw+I1ajIULcu81cCNoWFB2RK1OiOq0GKZSEB/OUl8QY1ajQiN7UTFRBQd8yi
V+8vNZr7sGKuVUwAME0T+S4kskpMp9SkE6D5QbNE4k6iscyGW4vmLe1U5Ll6
kainKHjXtzcJWCY9UhofSKIOE9ooNY2AWc/cAXY4icrXnHGxTyagRLx8u3Y+
iW6ILE7WXSfgex6pyH9AIs/XuVFL5r06tELoWEyiDNFPd4PiCUhx9v3uchmJ
tnDe2vDjCAgZz0imNs3vdzmHecQSsM5HtEzcRiJ17h27/KsE9FTbFNh1kah5
y9mVmisE7Elvq4gaIpFN1IMNWZcJYFLuORmRJNpxg+GljiEAB4U2P58k0eIl
fWkw7zMtjn7+MySaarBXJ10i4P//QuXupr790QT8C8ILTO4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2725#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtlH0w1Hkcx3+7a5/9lO6WE0uIFFcWrUmZ72dYohDiuJPnUZ2HdBI6dw6p
k9PogUsP6sbudvSwUskpfKO0Kq4TobgtywqxvzwVjatzM/fHe97zmnnNvP97
m8ckB8bRCYLwXcx/vRYZjH36ROFPaTaPctpJSJ63zJ//QOGjGXbj7m0kXLsh
sp6epbC6IVeP9ZgEBxvfmOE3FD79z6qgglYSnPXzXrT1UPhUY8zgiXskwODk
o9NVFBbZM5fJ6kgI/Ln9smPkom8Xd+OBnIT0J3lJuxq1OMBmmwWZRUJXF3+s
KXoCG864l0+uIkF4N/lzZ5NxLLi4b6i4RxdqEu4zl/w9hj19Vft68nUhqlD0
9nnuKG4PV5/40VEX5k5k5mM0gjsTnFSvB/kg1VMZlQ4M4yKJ5SV8lA/ntohS
Oo9ocJZm0tpjAx9yE6MzVnsPYVeOIKV4jAeZjEvpKRNqvD2q7HZsCQ+is5+s
7K4YwCLOuyc0Tx6UNGhKz8W/wmdVhwpC5rhw+6WN7hULFeaPVHp5yLhguRTc
gs73YcFmSQv7Ky5cX5Mfrx7sxSyWb2EGjQsvW6pXiMXdmGa4b3uDggMauxIH
fKsTK3PCB/ujOaCfVSleS+vA1euMFR16HLATU3by6Tb8/u2sYUUTGw5KJv6q
y1BikjHQm7aHDYIgxbGvDZtx5bUsOQjZcP1dy5LWlbdxufSq+1QHC+R9mqOj
eQrM+iV3oSebBeEBJjf7Yovxqe/juq+uZ0EdL/NZ8/6TyOiI/aaicSasV9NM
c0Kr0P5wp50TZUywfHtn3qW5Dk3L06MgmAne0uftfqHNiCHRveHPZoKH7zLG
bI0SMfy54zV3dKAosifbvrYN3bJ226afpgNKPyHpv6wDBYvPPThuqwMT5oKs
p2c6ERbr0Za8ZsD+VNvoIoNu5J2dLtTKGNDTvzRwZ2svCo44ObkrggFRBza9
Zvv0IUHgXskzIQPu2ToX3GOq0Kb6+C/gOR2sufUjMq9XSFJTFlp2hg7C+gQP
Zv4AiuPaepyKoAPxgV6ZolajHLbNq+VmdHgf0BDRYjWEsh9cUOzV0KDPKdLY
Kk+DHn6zcBpX0GBvyFJ9i/5h1Gxg4MdPpoFR8VCojnAESSWPP0660EAR9tvv
0xmj6M+VmexYHRqEuP7k1dowhlKfOmh8OgmojkiycFl4gwwvX31IyQiY47kz
6oInUKuI+/F8KgGBHRvFwlItcpvX9u/2JoC3kd9UX6ZFXx6Xs654EdAke7F1
h1SL/qhODKI2E2CfcSD6rEKLjGbX7EjzJEDPrLbQqEWLuqrDTA67E/Aw0WFQ
MKVFQ05WkVdcCQDO6mN6PhSy8kse+8xhcf+7ueWKAAq9nxKXhIkIqOpTyn1D
KOTzw0Ks1J4A06qddwpjKDRvlJXkuI6AhWDZMO8AhRKGJPbBdgTUSs1c2Rcp
VN5lnnrBmoA9JKW8eJlCBbtiI0atCLBObwz0rKYQd6Y40XGRi7eE7z5UTyEX
wf0ZpSUBKZNnTjI6KRRbJL45tYKANWHxptJeCm037m9wXeSB+xsq3VQUSjry
7Zt8MwL8S3sbc0Yp9KvS+bqZKQEceoW3OUWhtqS0rQlCAnBCetfdGQqdLS/l
1JoQkPbMMzLqA4Xk3mWj9EX+/7/QMfeDWj9jAv4F2tE5Lw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2725#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtlGs01GkcgOfaMMwYNrVkEGWJbZlKm5p+bzY1ROV26OYaOaGiRKtTyLrt
lA7alVVbuaS0lEgkL6KROCpGNFKDsS6ZP1utYefPtufsh+c8356Pz/Kgox4h
NAqF4vaF/7walowvLBC4JyR1pkvMRUdnzdNm5wgcFjElC/iZi+7et7P4+JnA
jmlr8WQ6Fwks3YJGJgi81X9XEiuVi9brJr9pf01gv9V9cw6JXISGptsulxOY
OZdRdT2GizxSO0rX+BM43+yt5xE/LortTI48VK/EqgsnRQxbLuru1hpvDJzE
WTWGPM/nHMRvOLp4vdEH3JeoQ90cyUFV4c1Mnbfj2HbDpk2feBwUILab6ksa
wzqo/8bzO9pIlRWfhmEUZzns1XTepY0KuAMGufIR3BMmipgY00L5LnbRXekK
LOdzK4NTtFBSRGCclfMwlhoJ1GIrLRRPvx0bPTmIt8+cE440s1FgQueKnhI5
1pJmF6lC2ejSY0Vu/uH3WLplr/00m41q31lq3zEbwHEmndnWNzWROQ85el2V
4bcbtnvauGiiilVphweHenFxysPvExUa6F3LPVN7+x5concsoi9JAylsLgnw
gy7sk155nPWNBtI9c8t+NfUl3u9YICh/wkI29oRN0cd2LDc9nuBwiIXObZ18
URMnwU/3mm49SGchfa+yi3uWNuHZB7hOcn0Rqvi7Rad1RS3uJsV/mG9fhIpk
ivNjyWXYkn1EflDBRAfcjSplwTl4UUf3h4oMJqphx0ubYrJhWFpvHyxgonWD
VONE33JIXTqV49vFQOZTj2YdmmogU1I6EhPPQM4FfR07fZuAbTi8ZA2fgZzc
9OifqyQQpjeb0tpIR5n+rxNsq9uBnhflUhBJR5KdfM5uvZdQfNruev1XdDS5
XP/Mq7wucH312UvYSEMxJ6wDM5f0QLeFZV5nFA297ud5hLb2QlvGpZJQPg0F
nNr0J8tVBilWAaMxL6joifX6jCfMAaj16lcJzlKRhWbdaKHoPSh19GdOr6Mi
fl24EzNNDoFWlbwQgoIoc7Rb0YODUKq5rH26iIJm3B/7tawchqF3i72ngylI
ttZ/2cpkBXhUUvd4mlDQMR+erln/CLg19Noy6hfAIGfYl8EfBYa12P/qjgUo
23ft5se4MfALurLluXQefIRnRa2Px4G2//Lx8sh5uOcXaeagnoCnJ4wuW3Dm
QcX+gV7jPQllIYXfZd4mwePlRnt+rhK4I9q5Qi8S2Bu1GuuuKKFGwzWq1YOE
xsI3O/YXKKHNM7LK050E27hTgb+VKeEGY+WZ8J0kcE2qxQYtShDFa/OuiUh4
FiEY0v9LCV62d1fxhSQgDauLXFcCvq6IeB9qQYIqSmVY5k7ARlNjcn4FCeUy
SZGbDwG3o3XO/WpOgnF56CNxEAGVwT+2PTMlQe1dOMI+RYDKe8JpzTISqgtM
hKxiAtRXhwYNeCQc4RCS4lICjpXNix9ySbCIrffYdo8ArBX7uw+HhByXA2E/
1RHQlu5E/sImIXo6L5veRUDTtw15hkwSVu07bFzQ+6WfZZNSRydB3rzhluMA
AflDCX1+NBJ25/bWJ44RoNtRVF24oAYNWonzcoKA2gu+jqJ5NeDw2O6GTwRc
OV+99oNaDSel2/wD5ggQNt+/cPEfNfz/L3hjtnn3ujk1/AsiUVrJ
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2725#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtlHs0lHkch2cM0WhmcJaoMK6npHKLkPP9UVlsutiKToVR2dxWWWUstZE0
22pTaJHadl1qaAkrh4afxI7ERiSFyT1GM68i+75jsO05+8fnPH8+5/nnYxIS
7XdchUaj+X7ef9wIetKlJQKb14decvHioGjKTEApCDxVfC0t3ZODHlTaWs58
IjBTdOLn8e0cZLfWN2R8isA3rVYLrrtzkJN2ypu2VwRODkj/WurCQWjkQ2tO
GYG7t1b55GzgIL9L7SX2QQTOnKuumdXhoLjnKVHf1MvxlxuO5fw2wEbd3ZrS
xzwZlsyEMF+GsZFhQ/QXTmve45ozbVGJCyxUFdGkxhmQ4ohkrgYng4WC02yn
XydP4paw46k8YxYirycIMEzgJiNp0ubKFSifLTHIHhrHr9u1uA1uK1Cej21M
149juNDe4JpDqyZKjuTx13mP4msbC2adAzVRAqM4LkY2jG91eibIJpiId/65
ec+9IewH89muCUyUVTeWnRc+iDuyD3ekcpio9u3aFfdNJVg1fKIlMXc5MtNC
Hvtu92GbCq1fuBuWoworQfjwSC8W9vuPRj/UQG+by7mOjj34RmLwwVZ3DTRm
nWWHH3bhSHVlpLRbHWmfEzpupHdiWmFE1pNAdWTtSFgXzrThszFcWez0MnRh
u6yjhi/GQYY/Hf3IX4Z095WmH1zZiO/bCkzLGMtQxVwzp8W8FmeEiDeF3VBD
hX1jVyZTSrH3LkWxOVcNHdm75s++o5nYVbfdcqlcFdUwE142ns6A1qfvfQ57
qqLNw3SjpIAy8KatFOu/YCCz6UeUS2MN3KN51NmHMpB3/uv2XQGNIL37d67e
RxW0w1eH8alKDFp0HTY3SQVdDXp13qa6DU45xbYM66sg8S5D1h6dThgRnuzw
E9KRzET33IvcLjjWp7zU40FHp2PX867q9YAZ0Sq3H6ShV/1afqEtvfD7Ws7u
63E0FBy/9Z36zj5IFqUtpenT0JP1TpefqEnAjZOTmxO2BJbLRRMFXoPQPuBv
7PJwEQxFETvUBEOgL3EIyGYtAk2hIowZHgbxbGpTWtAC/LO3LrDZYhS8+L/q
rfxLCX0OQastUsZAYhCXut5KCSf9tbRN+8fh+7xOJT1vHgwyRwNUDSegoaLe
bJ/JPJQeunN3hj8JZwerLpvcVYC/2w9eLXVSqO2ReaqCAsoDo0xdlFNgYXOn
eW6IApK5jVGzXwbAdyzKSaXAr9PV0TBbDsess+qeOVPAdNV8LLolh9zvjKNS
t1DwuODNV4fz5WDrHFrp7kSBDT+ed7NUDoOxBxi1DhSwjavTDJrlcLVYWVy+
iYKnkXYjuh/l8KDIbEpkQQHSWJfO3kmAd8rUI3edz/5T5KrSvQTI58/3s7Up
KOsTF/r6ExBVb3eln0OBUVnoo7QQAma26N2OZ1Gg3F8wzown4OgOJr9Wg4Lq
fGM39SICegQsyYElEr5lEeKiEgKuDJx6Z71IgmVcvZ9nOQElYbfPMhZIyPQ5
cuKiiIBF44TdFQoSYj7kZjC6COifj76gN0eC1aFwo/xeAlxo22TTsyQMNTkL
PSQE/OHpMPxshoQ92b31SZME8GrzIi98IEFD5Z63CUFAUaKQHjxNAo6I626Y
JeBQyRLXjSDhzEvPoGDF5x698NZVchL+/y+wTq9cIN+T8C+6NGl6
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2725#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
7Ly8Z0iY+tFoi/b9/38NipRc5FH+P2uKnRo=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$2725#11"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 1.0000105325897637`}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 1.0000105325897637`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1, 1}, {1.0000105325897637`, 3.9999999387755114`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"3", 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"0.1`", ",", "x"}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"0.2`", ",", "x"}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"0.30000000000000004`", ",", "x"}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"0.4`", ",", "x"}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"0.5`", ",", "x"}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"0.6000000000000001`", ",", "x"}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"0.7000000000000001`", ",", "x"}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"0.8`", ",", "x"}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"0.9`", ",", "x"}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"1.`", ",", "x"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.75, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.571589, 0.586483, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.915, 0.3325, 0.2125]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm], ",", 
               TagBox[#10, HoldForm], ",", 
               TagBox[#11, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], 
     "]"}]& )]], \
"Output",ExpressionUUID->"c3945d7f-5736-42bb-a646-66ee7a15d128"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"KerrGeoPhotonSphereRadius", "[", 
       RowBox[{"a", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "0.1"}], "}"}]}], "]"}], "//", 
    "Evaluate"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], 
  "]"}]], "Input",ExpressionUUID->"01ee7e81-d606-4a97-8585-8856d3799b3b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVynk41AkcBnBHacz1E/JEKWtDbIfKUZrx/Y7SlpRRmKgooh0Vm6JLInKs
kkplJDKs4yG2pqJdpqmcs9OTKLmySI6a6feoxDpmdvaP93mfz/O+PwSG7wjW
0tDQ2KbO/70gyKgyKJALD5bkue3VomA9b2ZX9EFvcODy7xtpUzDCfWAy47Af
1GZnGTar/cHEd3HQ+kCQLl7f6DKbguxZVkEZrofhTeQFuRWFglGH9kdOLTsJ
NiCzHmVQ0CA3Rllulgia786fOWdMwb61jOfJJtchwcQ+J9WWgl07FkYVhv8O
Vb59Vk6BFIy1Yh4JFFSAXc/fKzamU7BYBXeojQ9gW90L9rwaCpq07ImIXvkn
+Cg5d3wV6l1UZH/L6QnUX577xcBEF3vZpbYju57BRhfXKAc3XawUCs8+m1MH
+CSI+uMpXTQlVm2ISG6AuBiucU6BLjaGjbJWgBSGnf1dI1t1UbNtc4WkQQYu
XjUBQ0pdnO0saU/f8BKsK9JiWdZULJTZ3Xo02QzGlk8i+n2oqK/00klntYDh
WK/W2jgqmlmnpYYLWqHA7bL0dTkVM7x4cgX5GixPntP36aLiS+3DKbyVbZBV
/DkiaxYNy8oE2JDyFjzYDqELVtGQ26FvZ/6iHRzOHgnm+9HwpqqAE/9TJ4Q1
6Vh+SqThBssGm/j4LkjKEy3yv0/DR8123LDabsgQlwVUdNJQdvyvywFmPcB0
0E6z0aFjSfYlGiv4H4j/d6r14go6RvafuNfl2QvORtKJUW86HjxmH5qt7IXo
4NuvTsTSkV0//2lLbh/8lq0Qfy2i48B1isXF7f1Q2rIpP7mFjuJgyXfDyX74
mhFXbjZNx+jx2yEGWe/BfMTMosacgTSd5PcZPw+AJ8exle/OwLNtN5WpIwOg
PLGcY36MgeZF4Uk7kj/AVe/KBHkmAzO/7TTNthsE25ruRvFTBn7R9vfc/WYQ
ZNF9/JIhBpqmH796O34IGkROttf1mLis54+j3pbDUF99VJnrwMQjyx6Ku+uG
QZYlZ9buZmLseN38oYgRkJYdu9YXz8SohGm9g4YfIT9EVGxdwkR2GhiFPv8I
p9nGTQdeMdEx0y2FFf4JjCZU8qoJJs47cCYrgZCDWJjZ5GJKYG1ZVZVHjRyM
363hVW0kkFe5IDI9QAGJBVu9+HwCFz7blHtHqQBlztx650sEirbEtK0p/QzZ
Y6FTEyICl1/rKmW5kyDs8M+ceEvgjT0aj2keJPiIciiCdgI1LC3qOz1JWOe2
PmpdB4Gvq8J6T/JI+OabuuV0J4HRPZrzHgaSsLoktXmqm0Cp9dKY5adIWOS4
ep+yj8BfJMe5iwpJOC+EJE05gS0pgr2KYhJYPH5+ntqsneLQ6lISJAZj1RwF
gXqDcy743SNhs/ua4bjPBFbSbj2+UU3Ctp0ei7VGCdThPTUnWkmQ8W30tL4T
+KvZ4MqeNyTUuyZrCdXuHKGy77aToNPo9oUzTuDdaC/e1h4SdoUom+ImCPQS
DqUmjZDAzVripzlFoPgQXeAjJyF/bZljntpL7VcVWpAkSKUCfc40gdMNpyXP
v5GgebRIEjtDYMiV3BdXx0nA9oZrZkoCm/1qO/dPklDesf2ARG2nJSNDtjMk
vM1hrd6nIjBfwRhTqdR/zyszKrX/A1WnPEQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVzHs0lAkYBnBRfHP7OOg2xUqlC9Yl1m7R++5hu6rcR1JqprRbooRkNSWE
VUw1xbg0HYqEbCkUSZhGljOOkGjHNZrJ9G2XTbnNzv7xnOf8znPOs4Qb5nVA
W0tLa5sm//ci3rxKHtcDnMYTHplpE/iMM+0fe9AXTBPaLko1DncfnhCGBIA9
GckN1SHwDXvnd7x1XJimt1DVswl0mb2CJ/wlBJRGkkd+egRGHd4XOWkVDa/c
ThumMgk0EvNn7pidg2Mxytb38wgc+JHVkMy+Aqmigaw8SwJ7vRZHFYTdBCLE
dam1P4FnVpBHuKIy0Lmf2+cfR+AtNVynN92HqPjjKu8iAtntgeGxNo8gs/bv
PzZ2aPbyQsfstU8gQDTAm5wksN+l2FbhXw+DEu43kQUNK/PyTtXrSaBsW8oN
ugcNTfTtXMOTpcCypSX4R9GwKfSD8/fQDD9EJ/fFiWk4q2tTWZ20BWiOjeYZ
EhrOWV/XLXCVwWBT+qdsJQ0LWhyyKyba4IKdvfKIIR0NZ3x0Bc7tYCV7fdTN
iY5mq9JSw0QvoPOk9mTvHjoKfThjKqoDJOs8Tfcn0lGmE5LCsekCw2W+NkQR
HUtKRChNeQmDWgbiIBkdPV4ZOpi3doPE+9qg/CMdM9Q3fo637IHLIYEuugsZ
6GohXR0f3wvvX9z5ZLWegRVtDh6hja8hKbjksGAvA1siqtODzORwWuhrm57I
wKKcCwznA31Ql/SA11nIwMjBE3d7PftBzC73tX3OwIPHHQ/lzPQDcSMgga1i
oMuzBU/bxQNgR23g7yGZOHyFWH5++yBIufrXVtgzsfZA3RfjiUEQ6lbYz/Fl
Yux4brBR1hBYLmG5bo9kIkM3eUi4cRhKOQuHDDKZeKorYyZVMQztW/nEpiom
mheGJXklv4EO9W81N18yMfOzt0mOwwjwsvoY4d+Y+FFnj+euzhHYX1aeU7+A
hSaCiEu58aPQWWhxO3otC63kfx7ztXgLOeeTNlXvZOERqwe1ryVvQVFhGmAd
zcIz45IFo+EK+KnbKH4ik4VRCVMGB42V8HHLxWZuJQtd0mDeoQYlLA2jJ5p0
s9Apc0uKc9g7cLMIkul+ZeHc/b9nJeiPwT+n0oNFc0lsLKmq2vF4DGJWK3ZH
OJLIqVwUKQhSQdGuqiG1F4mL6zeIr8+o4Kyn4ExTGInlm/lda4rfwxp3nkqW
RqL15d5iZ3cKIgJHq4XFJF4N1HrI2EGBFW9+s3EJiVoWy5/1eFLglv+0Q6hx
R1VofzSHAiIlsU9YSmKsfNbcB1wKbKdkzcIyEptXreRbn6Tg5beMr5fLSfy1
LsLDtIACLt3pXno1ie0pot2qWxRM3dPz0K8h0dm79lBNMQWf/PyVaRobjOgl
BtylQLUxxjjtMYmVjOyHV2so8GuVrD//hERdzlNz/RcUzN+R/y6pgcSjZiM2
8k4KThimeOo1ktijoLuUdlMguP2h/JzGpbE+nK1yCvike2iihESfvNHUJAUF
kuzVD89KSaw9zBT5jWn+Jy11tJtIXOloV7CcomBv1t3NcRpPSWPqGj5TIN+6
peX0cxKDL4pbL41T0Fa1m1Br3BbQ2LNvggI2+wvym0lcu0wxajtNgXauUdS0
xvkq1r9qNQX5oRWFsX+R+B8EajjZ
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVyXs0lAkcxnFSvDPv+y5JtnUp5J7C2bF1NDO/XzlbLUJRI6FyyW6JmoZu
Q21qsaxbrpkOx25DoVIbKgkxSmylUmtqXBqjscabTptzFHb2j+d8z+c81hHx
W6Pn6ejobNbu/5pHmjZERgSAKFB3hVKXQJlgJlgcsw1cHq0VHp1HoNBXOZ0f
GwIfr8nrKD0CR8x2LItcGwFr6v3MPOYTyJvvEJn/fSzY3Vucc1afwMT9exI+
uxyFwNCHhnYkgYvKkmevWP0Cz1QPo8JNCBxaQ99PMysAV/nzzNv2BMq3WiRK
4y9Cac/E++V+BJ5y+OpARMlVEOk7nE8QElg1B+XsB3/CjZEB4/ICAs16Q4Vi
19tQ+c3kQu872v9GpUep5z047O/mMPeGwEFetZs6uA2URx6bL9djYUNFRVKb
QQfsrPq1y9qBhZaG7l7CtE6wGHD29t3Ewgdxk9xV0AW0qEjdu5+Fun2brrZ0
dkP9QrsPBZksXMBveZXj9Rhm/X2mgmpYKO3mlNZPP4Fha4vt4X+x0Hg2SD+H
2wv8Ia5Pi4aFVk5ZGfElz+By9KAkzJCN+UGCcQ3zHLLcM99/cmXjY73YdIFr
H2xTK9r0/NhYU1OCnekvwTHN8o5nHBsD/jbm2PS8AlkyNfQhg41Fc3+sS1nR
D12SoS+yajZ62Xc6p6TIodug6bvKLjbWP+EExLW/Bnvez4T1KBu7RXeyd1kp
YLKBEyZdQOIlyW8kN3oAsJ/b+NSaxIThI3XyLYMwz134tQ2PxJjDHvsks4NA
3W33iQshkSdb0tpbNgRFJ1z4iQkkKgsIu0y/YTCOFbyPzSOxObrlk8n0MBT+
5G+WeoVE8dSFvYvOv4Xi4Ewr4QMSSf20t/kblbBnPPcMV0liUl/RbIZaCW7j
vanDMyTaVManbk0bASY3PLvVlMLij4GWEo4Kwjdf5B5yp/CDXviWnS9UcEVv
ncTQm0LLHFHehZRReLNhSbQwikIXxbVD2+zfwaMmyViPmMIDLjebX3e8g+2y
kYOx+RSemupYMipUg+Nlt0WttRQmnvliFGMyBsEbl+226qCQlwWm++6PgVHj
DrWTgsLVxd7p3Ph/oJ/DNxJ9onBx1InzZwzHIcnLNLOforG9prHR/+44UCpn
+o0tjYIG84ScXRqIsy54O38tjRZtG8rKZzUgUCWGngyg8cYPyX3fVk+AVG3i
lBZD48pz8mquLwOX3jVny8Q0Fobq3CL9GRhbnjxgm0Sjjr2drH8LA6fdE5xT
tH7eGDd4VMCA5w7yOiTTKFboLr4ZwQA5KU9tPEljl5Nj8spjDPAVq/wunabx
xxZRwFIpA7X8sg2paTT2ppeEaaoY+Cwrn1FqzQ1s3tdUzUBxm+Lq+nQajVQG
Z0PqGHCRGunPat1Alt4qbGIgfGnAMVEGjfqCVhvDZwxUNIWd2J1F40Erlavi
BQO2hatVd7XuV7N5ta8YeOkU4GueTWOtOEjgo2BAacRn92kdVDGakapmwLTX
aLNPLo3N+6mS7eMMRAmVuVVaO3q4S+0YBkwmpp4uyKPxS+fxlvsfGUg3GPBq
0XpvbllP3hQDYZrrCZbnaHwS0t6/Z5qBRH5nxXGtPW3Vo24zDLxYavHopda/
a+h/5+YYCL1eN8HJp/E/KVcuDg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVz3841AccB/BD+N59v1J+zVC5FsVINZ6M4/OxtGoVcjiE4vJbjCHV1ZQS
kpn8Og49V0nPKSRJNV0I/W6U/GhCOl2dvlu1tVmdfffH+3k/r+f915sbkeQb
qclisTYz+b/NhSatwggf0HAwkZzRILBb8ClQFO0PzjwZ30aTwJRNkzPFCcEw
2nRfU8b4hVnQIqFrBAQkda47r0Wg25ylwuK1CaBdnJFwUZvA9PjwtH/tMkD1
ewP3OptAw5r96vOW2eDj8Q3en0/guLNeZ45ZCWQ7v0vt5xI44muRXpt0GkJz
PcoXehKYuXTuzghxA1hGnk2rEBJYNwsnOL0XIVTPaeKfAwSa9YWkiByuwGd5
OpJwKbM3n3GqdLkOdLzB1CI5gWNushXKwA5YVf12uu8Zga1S6b4O3ZuQkTc4
N05N4AL9lWtScnqgsWh5yV4zNvYm/sFbDreBXxjNj3dmo8bA+gZ5z10wCtMU
T/HZqO0uHyxc8wBKUn/1SkhkY+1dx8pLMw/BTsKtb8tjo4HaT6eQ1wflRgtv
XTjFRkubgqNJ4n6YP1cVGyFnY7GfQDVNP4KmtiWTpiNsfKCVkCtwGADVkQv2
4ndsrK8XY0/uE5CW29Zd0eOgz5CB4+J7gxBp2+zQYsXBstlTHllfDkOjCT8E
gINrrHtss7JGwNrD3nhcwMFLDx19EruegvL29MFdiRy8m3r1p22WozAgVLfl
ZHPwrOQYyYt8BkOmXvUSCQfTJnY1jWwZg946GiebOBj9g1OcRD0GttfSdhX1
ctCt2/RGX804PImpDg/5jYOTJYRVvtcEBBm6LBK942B7pPwvo5kJ6JZqDN0h
SBR9qIoyrHgOIays+94WJJI6Oc+L101Cu7bOOuOVJO4bKFMfVU7CsbxPMeae
JC4+k3TEN+cFyNZax8YFkFj+nr9A4qiAsJe6dlOxJL7VCtuy9bECdN0buVf3
krigMLWoKmsKdn6xPaG+gES70cZkf+uX0O95uIF1gsSddi3tT2++hFWBpby6
RhIzP9w0nUpRwo6yMZ+gDhLTD32cF230CjxH19IH+0h0KwCTuM5XUFG6p/r0
cxJXl3+Xy0t6DblPV0WZvCfReMfeikP6Ktje4upurEVhV/3ly96/qCB5m1vX
3wYUClrN0wq3TUPPuQtOaVwKLTq+rTmhnoaYsde7/R0obN6wf+Ar2Rs4UF0V
quNOof3xERlvEw1GJ/tjd2yksDSE1UZ607CsKjO4hjHL2qp7eAsN0qgqz2HG
jy4njmUIaBhPttb22UShaFTDuCWChvUN6atdN1N422bZfvvdNLy9Mz98njeF
MfJUn4W1NEyGYG+LL4V9ueLQ6ToayoSvFTRjHr897pqMBkWazqwNn8J5Ct3D
wU00XLmRb17NuJWsbCu9RoOL4bB2th+FOoIbi/X7aWCFZdT4BVD4vaXCYfQx
DT/mL/EvYDys5LidG6TBux/n9DI+J/ITbBxl/shuebkKKPSTTh09oqShPd+i
hBtIYXs8JQ5Q0UBmbzDZyniZ08paK5qGSrGisJjxx5498s73NIj0k1N0gyiM
+rnmXtEHGlqTw4aQ8cPgruHwGRo+f3P16z2MXZYop1Z8oiHmUO7xZsYnp/X+
nJ2lIdOxR6Fi/B9EByWC
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV0Hs4VAkYBnClOHNOUqKsW7IN1bLYXEqj76ueVBJGo6koi8UWkUG0rs9K
ua2m1qUJaaeiQm21cqmGItPasVq3hCS5NsaJrZTEnv3je97n97x/vd8KnxA3
v7lKSkq7mPs/dX2Xlvv6uMKZ+Fq1wDkE1vO/7I0JcIcPLw1sOhkLnPqnMoP2
Q7SOs/uOuQQO6Oxb7rvBB4iMNVEmygTazzPxzdwaBJniMZfX8wg8Fugd8dk0
CjiCddv3EQQuKYibuWF4Evxuh3+/UZ3AV+vUapN1skAWvIKn0COwy03vWGHI
FUh/ftFQ347ABJOFR3xEN+HshtQUKY/Aq7NwkXzyB9hmzRd6BxOo0+wpiDGv
gvjF/wgzUpj+TpF1rl01VLMp7kExgb32xRYjex/B1mmlpOv3CSwXi2MfqT6G
8OVHFwy0EaivbrlFkCyFEDenvOFRAp8Ej3O+hQZwbLhg5DyfhXPat9+skcqg
jJ0/V6jLwvkbazqEW5og2r/kzaAFCwtlVrl3p57CZ1MLo5PbWKgxw1MRcprh
ntwy6mtPFhquzkgLEbXARPYV4b+hLMzk8UcVdCu0DrkoWk+ysEk5KIVv3g7y
05bftYlYWFIiQmnKM2h8q7ZtrJSFrs81rIwaO8DRLvJvmxoW5sxe3pT4TSf0
WBo3/tzCwi3G0jWJiV1wbSI4+e0AC+8+tXINruuGtfIhx5IPLJSF3zvtZdgD
96ocjnMJEq/l/UJx/F6Cy+kxLZ42iRF9kbe6uL2QuvmOQ44JiQFh1ofzZnpB
4BvLu25Lon299sPmgldga93dZuNAYn8WwU537oP0aKUXse4kSvxqPmhO9UHF
E1nFjC+JMZP5/kvOvwbV5ogOzVASKZXk15nb+kFsJpI3xJEY254zkzbSD7Kw
MKuVaSQaFYWcckseAJ6yDaclm8Rz73br51kNghdH2qd6icQJ5YNcj7ZB0M/a
WfmplER9YfjZ/MQhcMIia49KEk17fg91Nx6GQ2+rN5+qJfGIaZmk+/EwTMsd
ezQaSUyYfKw9JBiB+Miwsol2Eo+dmF4UoPkGBFyzQ3dfMvsyYOnh2jcguawd
Vj5Mou05xxROiBzKiuq0Fo6TqPVD9PkT6qNwLfw42+cjiXUlFRUuD0bhT+nE
4vZZEvnluhFCLwUcuG1B8lQo1HvkUHBxRgEGVV3duIDCOzvi2tcWj0FCQL3E
XINCs1+7ijlONBiup802LaMw21OpknKh4WPVp/o9jJWM2fWdXBocIsf2BDFu
rQjujeLTwOVleeQwjumZo1XmQ4N/etPkKOOG1avizI7TEPi+JDpbm8Ifa8Jd
DQppcE99cKPvKwqbU0QHFFdp+K0paOUkY85uyeH7xTRoSj4LKR0KFw2qJu2/
RYMHp9zZinE5lVuZfZ8Gs025nkmMVfgPjdRbaLAz+OshW5fCo4aD5j1tNBxZ
5XRlPePOEdK+tIOGC35F8bsYl8bw+Dt7aHBeJteOYMwTD6WdGqGh+nL+i1rG
ksAFoj2jNAxnDkY+Y7zK2rKQTdMgGFdhyRlPS3+qqX1Hg3qqTF1Dj0L/MwWN
ZydpWLQkNInN+On+uk7vKeYfYvn4OsZ2K0eGLL7Q8OrFBncnxpcUau9nZ2lo
CPS+6cX4Pwr6K0E=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OLS95fNG0VIKDH9YhMSjc/fQP4IqKPgl+49JItosARSO1FAwulpGJxW9/7HU
vrn1FCzclL8+DR3X13rz1SsKuho+bU9Hd649Zqb9joJnlIRTBvN8D9PIz00U
pARK2GSiddNZH8I/UlBsc9kgCx0szN3f20aBxbWMnmx0/jyvO8kdWG+537dy
mPVvMB6z6KJA7NqQ+2X08HEJi8FvFJS/ClG+glbO/RB79TsF734V1jFe/zan
xbaPgmtF7P25aM+xw6oiPAritt0fY/zUVqx0r4ACHydpsTx0b/C7PzMGKJh1
dW4g4+k3M62eDVHQXFLezXhly8FEz58UaIhwza+hd4uuaJ/3iwJpkVvpjMP0
JtUbflNQrfm3h/FtpwavkxMUDPR+U89HfwpPL9cRpUGzxMGZ8e8SN9Ev4jTM
mHCMYKzWtcwmSpKGu2upQsbW0/6krCZocOmbVsXYd9Wrrj4pGtoPPWpgnMlO
WZQmTcOY4Ugj4xcJ+3wtZ9GwuuZZHWPqse7TYTkaiBDZUsaynDGJfAUa4noH
UxmbyNVt3TaXhu7de48yZkNShpgyDdW7HUwZx3js+V6iQkPL9k+TzHrup+vo
uS6k4eGjrxWM22tGAmZq0HD5l/chxmL/Pa+u0sL5R8RIMV6snDDNW4eGNx90
rzPvz36js4OKLg01NjtWMg7y07rcuJSGJQckH11l8pY7yAleTsP2BNMVjF+9
rVyuu5KGhNVjeUy9/huLOdWxiobaJiMWY0VNx7oYYxo6Xv9lM/Um7dRlTExp
SL5oVcrkw/20cCdvLQ12mbK/mPxUtETyN6ynoUvd4ACTr2+iDqtGrWh4HRoW
y+SPtXTBuYJ/aPja5VjI5HNnRIWcxFYaYsmzVZfQ5+6H7XlgR0OpevMTJt83
umwL3RxoWPPkWjGT/7FVPJMXTjQcrKz2SUEvcCsL89lNw3wJqfXJ6I0Xzr9b
4EKD18MPUhfRlzhz2Wf30zAwvfnUBfTqS9bRpt403PNM+BqNPrjrws1nPjQM
+tL+Ueg0lU+v1/rR4LFdRSKSyX/+nmnmQTQ8fivOYr7v+yXHYi1DabCxrb7C
7A89fmVF9eE0nBSvEpxCzzIab9gQRYNnw4WVJ9HHKkOnW8djPkqv5weglzak
xW9Jx/nHpSow+9HehI7i9xk0JCbNUWb2q3i7Be9ss2kYbz+k6IHmt96U3naV
hqCtPiMH0bd6n15wLML3aa1kvhetNdGTtK+KBjGvnSo26B3Pte93P6choDss
cSM6PMyzmV1Lw/Wvgb+Y/bV32k/ZA6+xXkF375LovDlEyuGPNLCjHIsN0SrL
l6X5cmjI6lbun4/eMnz84RCPBgVeQIMS+nR5xWc/Pg29aRdy5zD7j5nFnMAB
Gr5zxpfOYr4X6+2XTv3G+rkXdYqjZ+8/lRkmw4eLD8RPcZjzyGm4fo0sH46o
xfh9Rztv8RoalOdDrrum27/oXCOXTa5KfJjHTVdtRS+esW7CTJMPlonOs+vR
5MNp7FETPhg9qR26inYrCk24Y8aHngfWa3PQEbl/Hh8g+TA5p+P0JXRDjEDu
kyUf2IGKnQnoHS7Ndfds+ZCkNCTPnJ+erEydIwf5EGSSHGiHvvBXdsfCw3zQ
Nj8my5zH9wdjQ9o8+PB6+uY8K/Ro5+kOKx8+BFiIX12DDilxjVcP5sOJDVuV
NNGXnHUGOpP44Dr13e8R7A9qb1dUbH3GB8eYHP8LaIHRrSdtVXxQrSlQi0Yr
1mVVur7gg+hGyfoQtNfXM7XHX/IhSlgn9EcrSFs2pX/gQ+nT1e93oQ97f+D8
+4MPPhP7n2mipQ0ohWPS/VBe1m5/H/sho8qOub9m9kODSOLrW2i2daNyiFw/
PJCJXnUNXc6+p5ai2A9HlNcPJaP3JQcsrVDrh8J9jaN+6PvDYlYiq/vh8clC
XUO0Y/k8/0SXfqgR2Wh+B/u5ELfasunsfjitHFR0HX1Hxutn1P5+8IsznZ6D
nuJeGXj+cD+kKZ0oiUXfU3Q96Xu8H95UlcS4o1knC846RPZDqmZx4AL0Y9Pl
MYp3+8FxX9HqaOw/lV9YXcmd6If1hseWrsX+1iRXnW8vKoAzs+r/MUA7nREx
lpgigNiHLU5a6DSTx82HCQF801fdKY2WKdWTXCEvgOTS9Y1fsd8Wy5f3qtMR
wMUI7YyTaG54jwnlIIAd2rdLirA/L/3nzOcVRQIobPhaTn8nyLbKj7/KiwVw
6SVn9Ct6YoXOfNN7AtAUDuo1oa1VPrmtLxNAzjgR/ADdM6gz4FAlgAcx2rnB
aNnsFqmAjwJYohE2VQp9TKBrXvFbAA27WjYvwP8NveSOItNNQuAQlYm633D+
u0UeSW0VQpbaoYNKaBEtzfp2OyFU6bOXsdCfKo5+O+EohKNTrbO+/4vnd5fo
7DK2EJaE1bRnoN/oLDqjFySEP03HR8XR7tV+tioFQrj43j33Hf5PNUdn7Om/
IYTsKRu7HqNNt1UeeVokhHl7HWUK0TP7poY7lwghQU/M5iy6XCrrUdpTITwY
PrxoGVrS8bmazEchzCxPOBnXietZ0Lesq0UInaICKhDdzptmVtwmhAgJzy1u
6OJgB0ebLiGoNlUJjNEOeZzYSB4+L74wpa8D+2WP6Rk7+EJwf/I15wN6keHy
Ak2hEPQbdDKfov+8PFldMyyESOVJj4vog0lXGi+OCkFSI8L8NLrJubbddVwI
Hy6pTHNHm2jwOPp/hSDc/bLOHn2tf8bI5KQQJOzP+pmh/wf+9Bir
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV13k4VPsbAHA1akZKUUlZcm2RyDYiy3uKUL9IlJFWZEnbDZFISct0lX2J
Fm4q3ZAolFKWikJqMGbmDAZl13SlS9l+7/nrPJ/nPM853/N93/O+7/cPr+Mu
PrMlJCRkZ0lIUFdFb/lSby9ncF2x37dYgkG8Y025R/jthKvCpO4hdODWL7+T
j3hAsraCm8YsBvF1xa6V3hZesFtGVjEJbSW5yjt50xG4JN+o8edsBhFy2PPk
xJpTkFLQtE5bkkEszoycfqR6CTpPPd0XT2cQnWYLqtkrUkAqTOItIcMgSBel
kPvH70HcLv8tBkoM4twqmaNe6QWgM+FDi9JmEA9mIGte7VNQ2RnxZdiYQazg
7AmMWFsGaaN2CzIA7z/JYd5Y/xouS02e5GxmECKrXIN+9yrQiyqapbuDQZTe
uXOmiv4Wjnbf603dyyCUFxraBLJrQLG6Qfq5D4OoPfavpT58gPM/yg81H2UQ
s7gOBRU19fBzPYssC2YQc6wrePE2jRAT886z/TSDuF9vcqPk9yfQPrtArfkc
g5Cb3jE33pID3PL9Ti8uMohXXYcu0DZyQOFesU4jOqAmcnaoPQfUtJb+6kJX
xz+Y3uvCgczY70HzLjGIYPXJ/3T9OfBcVV7gjuY6ZPfWJHHg64ik/w90etK/
tTMDHKAfzr+yks0gVHViY46nN4HzttA2178YxEdH2YvvbzfBs7FThw+iIwKT
I9XvNkF+0eBwMLr1RcaJ1kdN4Nas/ikFHeuUw4I3TdA/KJBqRU8FVagvFDeB
+bxNLqwYBiF4NfLikW0zODrMMd12lUEk72ANDYubYY/gKqEUyyC259QlDo42
w7iT27Q2WuY3mPf/aoaac1JFTDQ7U/vSF1oLWLLXTDihIwZ+rSSXtYDXUs8l
UWjvczdda6EFrJneXt1oo7zOsjtxLbDWovxwVhyDEE/v9MxKboEMz+CeXHTe
9g/02+ktsP7QIlYpWmusaEd6dguEnPpv+Uf08o0XvsWVtsA9uRCtCbQET0vt
TEcLvHmk4uEazyAaaUeusNZyoeH8wOpJdGCZg0OlCReKR4qs6QkMQv6EJl13
PRf67ibYyaH3tLdfmLblws/+eCNt9MCz7efueXBhV2Z8uCt67rF1oT8ucoHl
4/k5B23Nm+0TJ+SCaNfdv+wTGURXbIf6r04ucOZXqW5HX9z0ssurlwv7Qr49
9EDXF508YDrChZnjgTeOoj2u9e1uo7eCL011OBF9cuNHF13jVlhmz3ch0Xl5
6UTNlVbovDKm6Z3EIPYl+OU1x7bC08QPTwLQsiFMha6kVlD/rr8uEB0Cn8WT
t1qhrOahShSa4DAyjYpaYfdz/z9vo1vGQqduCVpB9lGdSit6eqNbWbAuD8xL
Uu8RyQzi8SoNrfMGPMhM0fhqh/aeP5IQx+TBznDLFY7o2pZrhx4CD5x9pXx2
oRP93yqIXHnQIy175gR6VaxJ6P8ieFB1/++STLQzX85ErYEHTF1Zp1F0/x+b
n93g8GBHa1rOL/T5gLOWS3k80PpRPzqNfjoxaMvo5kHUmg0BUikYX5W3O7+N
82DwnEOlMrrLKzS0TIMPK4Tslbbo8Nz8CePVfNi+pPGJA3rJaPfZ/LV82Hji
lYUj2u6iMztrPR+yIE3LDZ2bo5N+yZkPyQWr/P3QwUNkmUsEH6zMQzMuoxcw
5aA+ig9VjVqHYtD3zzhUb7rMh875p3Xj0DyZ4jqzRD44L5kXk4q2MowVqjzg
w/LId8V30dywNweu5/PB+sSVPx6g/6z6/UX2CR/CzIbP5aLvuPoNS77igwo3
ZUURem4IMT3QxAcTe8/nr9CZr0LOH+Tz4WKLalUl2oyeP7e9nQ8h7pGv3qAD
ri9f+LmfD6m1sokf0B/LRlaWzvDhl1L83RZ02szdDdG6AlCzvR7SjzZib97Q
bSCAbzsyHw2i6xd9I2xMBSCUKRQMo2errSNoGwQwI/tDZgR9xPa9dbSbAJhu
vb2/0PSGo9bduwUgLjSvmKDWv1PO2sZTAGX8pKtT6Fbf3Va0IwLoXLFv1qxU
BrHxyrBFdJQANM2J3XR0m2yiRfclAUTVvWtioE9lmFrYXBWALeFCzEPn555d
T0sTAMc95Od8tIOJxnrvmwJoBBlrGXTXy1rz6r8FMBH3z+mFaIWPsubRebge
cV+jLLrIrcSsu1AAYRuu9smhHTs8zGxKBVB61vDnYvT579nraFUCMLY5N7AU
rRzmsM67RgD3GDpN8uhns4ZNq+sFYGHBKViGHpYzNY1uFUCkj8am5Wj2DQGz
W4jfd6N+irKaxlmmTZcArr4MergCXZ6nzszuFcAB3+X/U0S7M2tNaMMC+LGu
vIPySPkRE+8RAVQ27vNXQl+zkzWpHhPA17qpL5S1G4uN1adwPR/Sdyqjq1ge
xtGzSXh8yKiM8l7RtFE3nYS3djVyKuhx/2wjmwUk+M6w9lNO/NfeKFuOhCcG
XzIp650eMqQpkFAXeriZcu3sBENvZRKyTwxPUvaKYRpWq5EgKDu0fCV6arHA
QF2bhG/iDh3K129GGkTrkaCYv02fsrGmukG3EQmnY59pUf6YX7PWxoyEZQYr
FlP2Nz2yNtuKhAi94B/U82mvF62l2ZCgq/auhvJt+2J9bwcSwv5ZGE/Z7NMu
/WpHEo7uc95Kucl9Wk/dFd8nvDxJfe+xzjt60e4kzCsvzqLMCLDX695LAnmD
b0Y5e2RwjY03CZVyP95Q+2cdHr8m25+Eny9mbaLMozHX0I6R4G445zm1/0FX
+breQSQkz59SpSyzNFK3+hQJZr19EVT8bLRqVkdHk/B+JmMRFd8h4Z7WS2wS
omwM3BTQqUkj0X9dIyFf2SGByo8BCZW2hDTcL9vpXiqfkkufXEm5SUJm/w0a
Zetjm03T/yYhq6lsyRIqPmRwXFYuxkczfBmVn5aJ8yzvPibhd7eiFJW/PQ5Z
fTnFJDglW36n8tu8pG5DwWsSEkImby9Ai+LVRsubSLD4eiSS+n/+sn+WVclD
C2hK1P9lMu3o+LaNhH2LFQrmoC8fDrtf30tC+nhJ8Wy0vt0nd3IC7y96aztJ
1a9JnzkdEkI4+dAy9jf6/JOJwq45Qlj9Wb9hHN2iukp6YKEQPHyidH+iIybO
lI+rC8FGinuIqhdaRYsDJrWFIPJX2E/Vk0/+/8hL6AuBncTZTNUbdW7zcbqZ
EDb05M18QX94rKsmv1UIe1+Lh0iq3vpVfly+XQj6JT3X+GgVFVa4spsQsvNc
NFrRgTHnmzUOCEHRgG3Ioeq/L/+ScTC+P29/Qw26Sum48bowIfS8HF3+lqpX
TZKi9ZFCmBqb2F2FriAMzDeyhaB7bn/FS7S/4uVB55tCsPj057xCdMknE+dj
b4TALDicnUb1h0Gjpe3vhVBdTp9OourZHEOBYyM+/7vJ1nj0+Hq9g3oCIYx+
JarZaPN7mqeGxELI6JVVCkO/DJPPClBsg3fB+qdY6K3JS3wEqm3QZ3lX2hUt
fCS3eotWGyinZCc6oae6ZZ7qGLYBU8oqfBPa2ole22fXBr/CGkqM0JVq42Lf
QHTaGHce2sXqv6fc0Daw0q+/M4fqf6zRMLszbSDPVvOSoOr3te80LXYbuMe4
vPiJ/dN2rG/Z11ttYNRb2NqBflfHB+/3bTA+MlVaiK4PfhG3X7UdyCuweCv6
SPnDWUGa7fC+72HlJrT03IygS6vboUFNwwfQW9JOsfJN2qEjyDrGiOr/z5kr
JxzawSJl7g4FdPV0waPUE+0wkH6htRPniTL23YaGqnZo+WdN9hG0x+ck6Kxp
B/lfESMH0b+WRxeO1rdDk36D6V60Wa5nimJrO+RHH77tiC5pUNl7aLAdtImk
fj10kVz6kOSSDpBv0zk+hPPQPzevSVv6dIDF/A0mnugtmoPjzIAOOLlsv7M7
eijfoWft8Q4gQ4We29D6r2mV6mEdUBH446AVuqgzLET6Wges7rw4qIAu0/Lt
FDztgKOpvF8NOM/5uGeSlrNFEG44X8EAXaLkxHkuKYLaBaYdmtT81zlZa0oX
wYbKxzcU0TmHPEoM5otA/Dl1dC66//TSBA15EVgkKWi14bx59FaM3fzVIih7
c+XyZfTJrtBCcrsI0jY3Ec04rz7jeTyN3SGC97axxTXoyY9WpRtYImhxvqv8
An3hBa08Z48IVqp21PyNTk6Oqw3yE8HstZEXjqGL7HI6pM+IwI1suTUH/e0h
d4HlAxHkDkRsXY3ztV8QM+DmtAiuBx086YjzfJFEgs0fszohg6X73ho9fW1I
6T6tE5xX1MkaUPP+g+zGAkYn+NCSouTQVW2yzGq5TpD6aEJy8Xyg5PBtpl+r
E7zFG0P2ojlKOSnrtnVC3f+S7b3wPGH1TqGSk9kJdhllplvwvII1QPOqUxfk
5ckUakTj+cin4r8lv7ugyfXfhE1nsL6M3fJdnNENj8r/PbgglMo/dney/Rew
fdBTE36cQZzhpk3H9H8B1tD6Y3/7Yf/NOX7Zhf0Viq/Xaurvx3416qp806QH
2DsVOFo7sd/S9m3f3dIDOgeu3x/fgv0+PjjxVnQvpGp06EvieXFN++MTO7X6
oLjAXnHcCOOzpviV8G0fTPy41eOkhefPsbcKvYH9IDLgSKQvw3n6wuQivyUD
INDWKRxi4PfFgnxA9QDwwsLi/xujE+uub7lieXwQflqmvTDuoRNLD4ZnXFg4
BNq3TYduNNOJN3nPnm0rH4KHiguK91fQCVap4sn4/cPAjEzV8MijE0pVdplZ
08OQ/mpKOzONTjzZHMk1zv0GXYsvC1rP0gm9JDLXcqsY6r6buRz0pxOpeySe
S28Tg3JZ5utxPzohoaX5TrBdDDG/2YuvoZufHROdYolhxL7hWLEvnYhon7W0
2EsMt3ZdHJH0oRMfdLQj9cLEIL1oWCfTk074VwQ7q9wXQ8qdDsMKDzrBuZK+
d/iBGK4GfTu4HW3p+irgZa4YjKcbznTtohOLeugXPQrFELez74AkulT6xvPU
l2L4Ltk/aMeiE3NZlWoLm8QwRJdaVONKJ/5U7Vnb3iKGzzrHbrmhBf3zrPJ5
Ylgsb7+ox4VO5EfsYP2vXQy0Asv7kugdd3pjLveLoWYgPpFwphOvDs9PdxsS
Q3P4ty2N2+iENtPwvqZYDKRTfN9e9GTN6YrqUTE8fc1uOu1EJ3wTMhsSx8Rw
zb1JVQr9yeONwPO3GPx0trimOdKJ9Rr9vQZTYgjS7g3QRGcPL/g5MyOGboe7
fk+20on/Az71zKQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
U3XOI2DPvq39vbrKgYqNyUkXcwnY/wGsdQOt
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9xqbEOj/TLaksQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#11"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVyXs0lAkcxnHva+Z9bbIInRKltqt16aLL1vD7lRO1uaemVbvCqjXSYDVp
qXTcS9a2IhnLsYUOlZTLNDXJZaatlCaGqMm4jRHetEoIa/94zvd8zrPYn+8V
SGppabnO7P8uCJhbGeDvAX4OazfXTtMo5U7uiz68B75KrY0tnXG4S/d4+hEf
iKuzrcmZcY/pD4sCtvhD69JM88gZ27NWBKRvPwL/KP5ys5qxINjv2IRVJAgP
hmVdmKLRKPfU1A2LBJAxc1/snaRRtUmvNsn0IpSXxjy4P05ju5eZoIB/FTLG
k9+dGaExZsXXIf5ZN0ExHKMzPEhj0TTkzXp0BwSSrQ4NvTSayg+ER9veheZX
ne2Oypn/duH67M0PgH++4kpKM40d9sWrNftqYLKiq9P5CY2V+fkna+h6cI/N
kO2vptFcf41jeJIM1jV7OQWV0/jo6DDHBh6Dn+OZwdtFNBKKHTerZU+hnmfZ
PUtII9uhujXN8Tm46l379DaVxoKndtkV441gse5O1N3TNM6Z8qbSOHI4ayh4
KA2l0WJV6jl+1ksoBV3da740pntzBwaZJrj6trDmnSuNz7WPJHNtFWCJEx4J
HBpLSrJQltwCOjK+XvlKGj1ezbFb0tAKp08QV1xMaMycvrI19ts2sB4WvMBp
Ch2XyyxjY9uhbOMG+fk+Cisa7TyO1r2GwOG8xUFyCp9GiH/3tVCCSuXL8xRR
eE14XpcT+BY2cWoOtORReKzz+K12zw5YayhWNSVSePjX9TzhVAfU37IySQym
0F4676E8VwVPngX1j7lT2H1RZ1mKWyfUmqHq5WoKJYHVn4zHO2Fbd11otwGF
0aM5h4wud0GQrdi4dZiNulRSV7pzNzzrSQm894yNJxWZU+c03UCr98lTSti4
pJCf6JXUA2WWor6ryWy8NLLbXGjXCzZ3fUK/8WfjB+2fPPc390I8741D4RY2
mqdFXMiJVUN4Ey/6awM2WilLw/Ys7wOF1nFpZA8LQ6zKJa/r+6B8+9BYi4iF
MaP189ThGii7bJjnmMRCQdwXg8PG/UCHnCTKuSy0T4W5vNp+0JcusvKzYOHG
S98nc/jvIC5lOkxfrY0mP0ddjtMfgBYYicm/oY11JVVV7vcHwLXzDvEmRBu5
lQuOpfkOQvx4gqnQWhvNapxy86YGQVIklmf2k3h75ynFuuIhKJnKFpQKSbT+
s72Y48IANzt+zNmNxIwDWiJddwb0re1k7S4kai1fJm3zZGB00tWQv4vEpqqj
HZFcBtQTrPnpO0iMVhIm5f4M9Kxd0d+yjcTHq1aesj7BwHYdtHHaSOIv1REe
CwsY4Nm/eC9aRKI8OevHwSIGDg4UH+IsJJGzW8K7V8yATWzBTokZiQa9dLzP
LQa2gNK7ej6JlbrZoox7DPhp9ofdNyKR4j5cov+SgajRJ87ZNImhFr22ymYG
EkQ8N2OKxDbNLPvrrQxUTbiKUlgkXo/25u5SMtCWc1YURZDona8+l6hhYLbL
1t1eEwRKgmdn7R1goEHMD5aOEbhy/ZqCZQwDTgPzu777TOAX2W/VtSMMGImC
hhZ+JPDQH7kNF0YZENc1xqT9S2CjT12b3zgDn3gbQokPBG5eqlGvnmTAp+yz
OOw9gX8P6n2cnmagNykiQDVE4H91SUgw
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#12"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVjntUzHkYh7/VzPxislkUSkqrIWnjTK1Ljfd1cttlmVQquWRG5SSVVKwd
HTamxkRJpNvWdkWIhsouGdNNNl3VtqWL7pPGzzgU3WbbPz7nc57z/PMsEQTu
9tYmhPw8vf/fWGhYJBTwIb4u675YQ2GF26S7yNcVJIs9Aw5Nc/CO3rF4/72Q
lWe4xGGa+4w8TIX2ApA+TPZWT1HIYywTxm/2B//mJj/PaQ47eih0fOUp6E2o
9raepHBuWvjUPTMxiD5WGFeNUfh27azSKKNrUFUjPtn5mcK23YvCcgKzoSGw
QpI+ROHZZd8cEyTmw04UrxN2UnhTA+kzXzyE+uz5YXmNFBo17AsW2fwJtUcD
eVYV016Wa5e8/hmseTDSVF9MYRcvb5XSXQFBe7BQfIvCooyMMwqqHEai1xnd
TqTQRH+1Y3BUJfCqW6YWXqTwRYDa4Xt4CRtz0j28TlGo1bwtX15ZDVbvTGoY
vhQyN8hbYh1rgeMZpGXvSmFOtW1y4VgdzGj3r9LbSOGcKRdWrEMDcGY8LfWy
ptDM8rI0MLERqhXBuovnUxjv4jasol/DPvaFgO2Ewlodf4mbTTNcfHZr0HSI
hXfuJGKl5B+4wm+sMaxnIf/fObbmr1pA7BMjKytmYYIma2OEVSvUMko63VNZ
6MipXBER0Qb13+z5ln+OhYV1tvyAsjfAbOw6be7DwuqQv2IOmnUAHWcfGbGV
hbdSLrEdvDtBzSzIfGXJwtDukw/anLrgi3VI+HU2C31P2PmlTHWB2YHPm6RK
JvIqFjxvSHsLFrJkx4svmNh7Tdciemc32BlsyNmfycQSb/nIvLFu6Fl63Elw
homi0VSfuUk9ILw7OhjrzkQ2K6onfmsveA4UvJ1pw8QzzQlTUmUvvLdqzpax
mGieGxi5O6oPetTcIwntDLzxydkkxbYfQqNvU2b5DPyoc8DJs6kfwrebnhs6
x0CT2JC41IgB4IjYoqc7Gbiy4/5xV84gsPm5vLJFDDy28lHJm/JBOM791H9Z
qYNnR8sXDAQrYVuMtN0pXwfDzk/M9p03BHVruTncMB3kXQZDv9Ih4DZkDX61
1cE1N36SOAS+gy8/DDBs1NpocPjXpPP6w2Cu+uqx4p42lt0pLt71dBh0q6PP
/u2ljW5FxqGxB1UQ5Bf8LnSuNi5SbElLn1KB1TKRiKXQQtmP4c3cvPfQWbMp
eqFAC62vtuU57KAhzmiJsEpD8Po+8pi9i4ZxmbJofJIg4VhUtDrRcPC7k1zr
CYKviwO6TrnRMBIkT7r0haCoQ8vgkYAGLhbobVITfGm5PNz6FxoOmzZKxd0E
j8hD+ItzaCg8Yd/nUUawQZK4X3WTBnVKUn+AgqCDc4nfkzwaPngtVP4mJzi7
n7qw9wEN9t7UcO4TgkXs5MfXn9Dw1Vml6HtIkOX23Fy/kQbPGIsQm2yCQWb9
Nh1NNOi9kbVzMwm2Kmfy7rbQcFVutnrNHwTvilzctnfQIMatMetTCbpkDEgj
lTT0ZDwb514jWHJUL3HPMA2cGtdIm6sEl9utzrGgadhSUEpbXiE4UXlaXvpp
ur/cmW98iaDPlbRXcaM0WEq1Ns+REqzbW9Z6aIyGYYPf9XUlBNcvVQ6smqTh
8XvhvQkxwUzVrM8azXSPJsr0w3mC/wGz1T72
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#13"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwViX8403kcwDfbvt8uqU5R51dSqFAR8bD1/nQuOYnRtGLyIKnlxzWZyqh7
pEgkoVZ6SEWdX/kxdNVsfrR+cO1ROaElZK2s77lbuUf57twfr+f1vJ7X8qjE
4BgDCoWyfZb/bR5t2hIdxYbXDnfs/fQ4esid2SWKDYH83KndxrMt8B+bLowL
BblFzq8DJI7eme1eFu0VBfINRXf4s82i20cXbomDnter887M4Eh4MDL5q+MR
SLox7fPoK44WlaaTtdanoLmRV+31L47eehh1ZJkVgaapda3BJI4Ggy2EFYk3
ISVW6d8xjKMT9vPjo8R1oCvjpKqUOLqlh7K5j5oARutSxDIcmfXyBKJ1v8Ma
PETlUDv7Gyvdrni2wfj8XievEhwNs6rWa3a1wyd1mHLqNI5aysvT2vEuGLE5
rvNMwpHlAmdvQZYCmlnLiqwicPQoYZK5Fp6AMNR3KNkXR9Q+3zqZohusFhtP
prngiLFJ1p/v/Qx0M7HOThY4quh2vdI8rQT2Ndv7xjQcGZMcLJ/ZC96TbwRP
P2DIenVeTqL4OWBzskcyn2GokMOd0BIvoGDNd9z2Rgw9o8Vlc9f1gYfdHK/P
lzBUXS1Giuw/4V6MyQPVMQyxXxm72vT0g38tP6AnHEMX9Tc2ZzgMAG+/TZIL
C0Pedoo1GRmDYFY2YopbYKhZ6cpO6BwCp72mbNo3Buo+fO9chLUKimMkwUv6
Geh2Sa4hM+YN+AUcpUVIGCh5JKV+MGgYkv7RHVxbwECxSW78EnIYrJzlO2/z
GYj1cKm8t/QtFGeGNAh/YqCxojm2ZwNG4Es4rSHvBwaSxsi+LJ4egQnrSfkL
LR2Jpq7uW3R5FJ4s8kjI7qAjQyxrtHDrGKiztku1F+gore8imaMZg6PdtW2y
GDqyqUw8HZz1Dm5L5o3KN9LRJd0OyxLXcfjoGF1RT6Wjv2l7gsJejsN834Yt
Zn/QkGX+4YKrGWrYt1xR0XqBhhxVdw6F2L0Hn3KGrCmUhuIdJdKhrvewJE5I
gDUNnZjqWqoWaMDj8crU+tcGSHjy28LYxR/g6dlNbf4lBoiVB6b8jg8gurtK
HxdkgNwv+WUzEz9C5auF1wNoBshkb+rlkwsmgN/SK6uXUFFndWtr4IMJCF2x
ueZYGBVxW8yT8yO0kHutiZpCoSKLdp/SMlILlqekfEEpBTX+nN63oeoTBIqZ
DeYOFOR0YbCK6U/AtrwDhbxIPRTzKHcNAwmYO7nH5SlPDxQ724cDQQTUt7kN
bdylhxetCcNHuAQEseM3MQL1IFJRTSRRBHhuk95MY+rhyepV6U5HCTBxOWTU
b6qH/bLDbKsKAowVRnL8MQm92eJw7S0CRJ+pfvM6SWDukPLvVxHAqTn0vVEb
CQvH8czQegKMjlOZNAkJLYZX7hbfJ2DqHJjLy0jAuHKbBc8JGNRMpKSmkPCL
9fg61UsCqOnqv0BAwoBmLqumn4Bb++3MKfEk1Ig43G0qAuoSwsOSokjglKtz
TmsIMATegZXbSZAenCfeOUFAMd3Rv2srCavcnCtsCQKU7pqcyB9J+KY4JuvQ
EaBTyXU57iTsO1/aUzBFgNC2ATNzIUEZ2jkQOU2APth963VHEjxXatTrZwio
aUG/2duTcF1r9FmvJ+A858yKyuUk/Ad19UGf
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#14"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVjns0lHkcxgcz81a2klKtSzvuFNsFq7Vjvz9nrCK5JVOiMrqtRBeJDNtB
4SiEBjU1VuvScalIbhMyDKEiuaUkNFLMG4vknXdm7R/Pec7nPOdzzqPLCfY4
qkyhUPYt5v/W8l9b4c9xg06mp2C5AkNiNrmPe3wvrE7LdBDJMXTWeXQhPdAb
9JZeGwlb5I+a+3/y/40DyvRY+QiJIVuqsX/6H4FQsIJfWSXDUOhJv/OEWRi4
4BRb/wUMrRZEyUsYV4DL/x5dMouhD9uXi+I1b8CdUflHwwkMDXhoh+YF58LG
Ty7Mzz0YumS84hQn6z5E1iRLOA0YKlBA9rKWR+DJDozIKMaQ5iufs9zN1ZBr
p7vFgbe4l+Vb3bKpg45S66Bnf2FoyLZwy/i+Btg0ygniH8NQRU5OZAPWBEs3
Wm1X240hnZVbWWfjm4FbYlIabomhlqAp5s/QCon25Ob59RhS6tl5v765Hex+
DbePkNMR7ff6vhTWSzC1XjEnHKGjvHbLW48XOkCbJSp+3URH6nJPegrzFTgx
aY6r7tERwzQpMTirC67Z+LVNxtNRuid7YhJ/DeuagjoPn6CjlyqBCezNPeBx
5quSpiMdFRVloeaEXljBqO80MKIjt351S73nfbBTwCWjqXSUofjHLmbTGxBo
tdTigzTEMmreGBMzAPo+IRcGKmnocYelW1DjW+idQoRNOg21h9QkH2IMgr6O
Q5T9SRq6x7+myjz6HrRr3lHbWTR0fvjCwwH3IRAlB36XaNHQ8XNWAXz5EAy3
CbOscSqyFa9/+krwAdyqO7bpNVLR6I0lhlddhkFzm0tqfxoV1R6tn1uzMAzo
qV55HYeKuN9uH1t9cwS660TzbAsqUqXHj6TvGIVO48apVXIVFNmTIU8cH4W6
M5W64a0qSC8/OM4j/iPw3KI1aDwVlDmzR4dvKYGCwif6/d4qaFrloPuBbgkI
1bpE3roqSCclJPV2zBjMiINd3YaUkdnggzN7jT5BidWSra3ZyuiUWXnt26ZP
cIeZX5R9SBld+ta0fuzsOESNlQoPaCij0FiZ2vE1n4GTzfqF1a6EbJNgbYDo
MzRJ8pu9w5SQdaZTAjP4Czy7GJl6kaGENI5E3IxdOQEfeOu1q1soqLGostL1
yQSMXC1OIf0oiF2hdT7l0CTE/z0nTJ5WgHaDgyBbPglXo34bMlBTQJljVI9F
oRQuvRDnXFogoa+263tFsRTu1chLDOZIkFuY6jAfSKFUvP1H8RQJThte+9uX
S4Fr2zBLGSdheNp0yrNOChal5S5evSSo87tVQ7uk4LPE3DWijITTUjO7SkIK
Gpnu7xP+JIHnH32EKZfCadp7ycsjJAj7euPqKTjMzuYL1A+TsEQU/aKFhoNg
d8yyJC8SBBl9B/pX4rD7YBLmwyLhBYoNXdDH4euHbD8XbRLM0wYKmc44KKtQ
tfa2yYDnQ6lSdcWBN+6fHtckA4qRofiNOw5tw+tyH9XJ4HVl0FAYG4eiSaaH
vEwG3EEljXIODsEBCksXvgxaTU2izMNxuGuwa77zpAxO1Ie4bcjDYfT0zHUJ
TQavErJ8JwtwCHrKaXVUEMDcUxsgLMTh83ln3dx5AtQk2GXvh4v/5tOErC8E
VKjequIJcZA9FEbrdBBAZz/VW9mFw7nkuFrjTAJOMySbB7tx+NeXd1meQsCb
8WW2xX04FIqdfdsSCCjmerJ3DeLgNK3Bd4ggwDNnLDFufNF/1JBb60tA7ckf
srwmcAjxKNph50WAidXWPEMchw3VB3mVLgTImi/Wi2ZwiDm8KzgWCDh2XfA8
9RsOq97tT+mzJqDDu/GN3wIOCqhKZGwhwMZgfGwLicMVsdjEx4SAu5PLZxUK
HFSzGOaJDAL+A5BkuPQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#15"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#16"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XqI=
          "]]}, Annotation[#, "Charting`Private`Tag$3853#17"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ma9dv7wpwXwY/wPa6W88
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#18"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVj3s01HkDxsdtRlGj0CoplZIi25qyr0bP17ZvpSSkRro4KDblmktyyZFC
silSLuFtN5dEl6mwCeUyam21bg1KNchl+f0aM2aExmv/eM7zx3PO5zyfZR7+
TkeVGQyG70z+bX3PBWWeHg64uOv9WX0FizTwvrlEeu/F5s32KvHfWCTIrnci
7YQrfruwJGJ0ikX6Fu1f6rnJA4qejj0vJlnEWtXYM+2/JzDgXVAU+pVFQo+7
h0yankJFxte+11IW0c6NVpQankdoolN25D8s8unHObUJi67Cf/bC9iohi3Q5
LQ7N97+F7XalDvfuskiM8Vxfj4y7mLZdsbw5gUUKp5E3u/EhJnVF8zgeLLKo
+WBQpPkfkOtXuFRYzuz8gg1ZVtUYTNn0PpbNIh+ti78fdHmOrugj5jt7mKTs
5s2o56x6hBV8yLEsYxID9votQQkCNKZonYlKZpJGPzF3HV4iVis1IdmNSZTa
t9+tETQB3HPXpy2YRG1zjTBly2u8vb9Kmq/OJPlNnKzHE2/gLD6f0y1UI/MV
zswUbjN8Fz+sSi5WI4Ymvyb5Z7RANHetZla4Gklz5g2P0K0Qus85wd+mRl6r
nEjkmbeDo1kq2K+nRu7cySCCxLfo2CnapN2rShw65nOW/yWE/TK9dvcHquTa
9O82Z9d2wizFNiE2QpVsWSVYc/ZsFzq/u+Z/8WdV8vgNx8Gv7h1G4kQbbbRU
SVPwk0tuht3ICbFe7tmuQoqykzW4Rz8gM8D9skWuCgkRhd3vcvyI8sTgaKm3
CvE+ucEnW/ERrG1xZ26vUSHWDXrPmnM/oXTn6silX5RJ71X1lRftReBEdcXo
31UmVUdrZDoTIljqycRXfZVJpPyGl3ZmD9ifB/o61ikTDWZCT9q2XlyYyt81
NKBEotqvKZIGe5E3EVvJv6VElhf4xzsl9MHP9vyOTnclcl26xyCb8xlmL4ac
23WVyKjKYccDbZ+xS1L5XXATgxikBF+5cbYfK3uHn1LhDGLafS9w76oBuE7p
1NWbMIiv6aOqd/UDONBxQdZ6dxox8nq9/qBB8FV0DSRjCoTGTWl56wyBFLe2
xUIB61+xwKd2CIlGVNRhv2+wvL4jkev/DyJE+8Q/pE5B90hEZhx7GKeXbS3M
KptE3Z3y8t1Ph9EWPn4o/eEEeGX6ISluI1APcGG8L/yKxc+35uYpRsDNj2E7
xozDKm/FsJMShfbtFsLB0+PYH834j5oqhYEW3kB0yDjSrf5oPjaLQqZfY/UN
n3Gw+WZMCx0KgkC5T4nzOJR/1/GtN6Fwpils95zV4xg4J7IacqaQ5tjrlvyn
HMwj1fHZPAqs994FN+rlWPlTdqu9K4X8WYqpwmo5PBR7/fhuFLz5Nnn3+HJ0
hb74X6QPBc2+8IOxWXK88r6nzo6hMIvz+NoKHzn4ttHtFsUz/EDDNEpZDmFV
y9eyEgpGUedVH0/JoLAwMeDeo2BL8/aHyWTYsaTV8+dHFNQeHPLuH5RBNGoi
dq6mULm4SDnijQzzs9s0QlsonNzR53I4W4YAytSmfJLCqv3jlb7rZEj3jD3C
VVA4qO1otNVYhkrh2/gaBo2lZUObdQ1lUK+NfdWoRuNRxbLJ9Hky5F4THuhg
03BvdNxnJB3DKxIXOrGChqOvKtembAxmqV3FXDsanBpBPJszhvSDjAqN3TQy
TxmkHlgzBsaqlQ2djjSyTLcKrxiOobXc7+MpHo2kzNbRGs0xRHYr6T7yoGF/
zN9Oo1eKlyaro83CaWSThKzqZCk4ErukqQgammqGloGxUuRUBl7/M5qG1/Ok
ucphUgTtfvLgWBwN48YdQ5VuUiwMse+/dYmGFne87qS5FL/UBDssyadxf+Hh
bZENEjQnZhwaKaTRXyRyOV4uAXdPlU9lMQ3+13m1+rcl0PrMOud6n0b42tIf
+BclKNPIqkivpLHYiiXYaS+BYVt1w9FqGi8v2G9st5bgQk5vC+c5jTAv6sOU
qQSH16+jmgU0LLXNDinNloDJe7ac3UKj5EZczbunowgw/Gze3Ubj76NPXG2K
RtE5ONu6REhjYTDzfk/qKEoinXk7u2d8tYf747xGsWBr+JFFn2b8Nuowbe1H
EcPOCRzsoRHw0FavmTMK55v9SfGDNBSdPE/Xb2JUHdfM2DdMY807wbFn3WKs
3rA+fyU987eDU3L7qRhXFHv5UjEN3Vonu18yxJgSnK6pldJo0JSljwSI4XU5
968rchoRQTXPgn4S441rXaf7BA0b8SV22GwxrIwG+7//RoPXURvUVv0Fv43M
GZuenuEb33p0WekL/g/qimbh
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#19"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVkXs41PkCxsdtRqXoZlvRolVsIrey4rzfytHNoaRmk9iGbiq3LSnChpBV
lGgiylnVKXZrbdFlmSgiWWuQKIvcjd/XmFvIWOeP93mfz/M+n79eI16Qx35V
Fot1bDr/78V+usV+vG1glZ9Rtk9ySCV38rvIgzuR5q4pWzPNoa7d4+lHvaAi
6ulO/cwhPXq7v/JbywM3KvP++gkOcVJf7pf+76MgBwSK/E8cEnZk34kJ83AM
9p13PiLhkPm5UcpfDM8h7skM4Ug/h3Taz65I1LuChNzgrD4hh7R56IfdCsrH
3e/Zl0T5HBKzfM4xHv9X+Fjk/xV/mkPuTOHGzFe/oz1wU3i8O4foNXiHRlo+
wW3VjnYvw+m96LZdlkMZflpVYtskYZMOp3urBr4rB995jat6BZsU5+WdKee8
hMu3F0uiL7GJgbbVhtDEKng/8ZA+8GeTV4FiRwvUQP37r7UOW7OJSvOmXwVV
tUi0+V32QZVNNP4laEnd8CfGb2xaWyjUILdqbbMejddjkV13eG2uBpmn9GSn
OjbAxcn0xdNADWJodiE5iC+E1etcwzf2GiTdkysapo3w4930mqumQf5UO5rE
tWzGwZpzvfb16qSggE+qkt7C8oiet9NVdbLt3Txb4zct2JN2/OM3fuokc+rn
dbErWsH6YrfvY1N1smFZ1TexsW3w2etcv5tRI4/qbbcFvniPVWWVw7JHaqT2
+NOLvobt+GS3KrjplBr5X3bKLMf9f4MhPP0iqJETXScftG3vgDLd7vFtDTVy
8Ae7gGxlB2iG+7Lgl6rEqXLR84bcThQaX053TlQl3Vc0TX5y60KPztbwc86q
pHS/QL5gvAuerr0ex1mqJFJx/cD8ax+x1cknOaxMhcxiJ35M39iNP1brb7Q/
qULONGcqkwe6IS+usldaqRDj20EJHok9eDN0MtZdxCJXpTsMsm17saVmn+JU
DouMqvls39PUixBRgTBtB4sYpB6/dD22D2d/S/FaPTUF8/b7ITuX9WP3FzPF
N72ncMz8Yen7l/2wiRh2MitWIkbxclFf6ADunDczkk5MIizus87BBYNoG88V
9TtPwukCdAMqBtEyPvhs+IfPWHN1S5Jj0BB6at0Wi/gTWOgfcS1OW4SmXcbV
yYJxvCgoKXH/Q4ShvDm2yc/HwC1efCLVdxjmhqKtBU8/Qb/cJfeGchgDRYLy
v7IUcLixVOShwiAuKESLn6HA7ijWtxrqDLSqZyu80xTIcHjScHgGgy7+ocut
5xTQLlrJtlnAoOTapFFBiAKqPy849tKMQcMD3uw8FwX647scBj0ZiMcGO3OG
5WD7lyVkcxns0b3eMdgnh8n67EY3LwYG+54cse6Sg6fcGVjkyyDtS/OJomY5
2sKqb0YGMNh887QgukyOuoP3NbVjpv1h3f9YpspRtDmq2eYeA4t2I0HKSjla
SoVjxYUMTIY0J3OWy6G0MTNwvM9g8nJm5V0jObYsafRzfsgg0JwreLBQjq5R
M7FnGYMs3vsfIyZlmJfdNCtMyGCsZmMZ81qGYMZ8XckEg8YzR5dU+MmQ4XfW
31HJoJnfac/aK8OzlrcJAhbFYLxgid0uGTQrzta90qBQV47UxW+SITezZc87
bQoGK5aWmctQR+LCxpdSxETb/BIikWLl5bZ7jq4UKavDC/jhUmR4sx7PcqcQ
06W6KUFSsJaZVLZup5hhj4jAA1I0lgR2hHMpGhZNBI/tkCKyXWXhQx7F2vMz
EowtpKgxM41aeYriR33/pHXtEthKXJM/R1Ak2M3mCYUS5DwLufo6imKIG716
c7UEoe5PfzscR1E8N2/BhyIJvjzh1pd/kcI+lOeemCDBIcHxbUtuUbyqK+6p
WC5BQxJ/7/AdCqtbrhVTehI47igNeHaPYo68cSVnjgQ6vZx4rwcUnB6PumOS
URTPynqc8YxCLag5Ak9HYdhUVrm/jELQ/0grqmAU53O6hbblFG/HOPsCro/C
x8qCaaiiMLu/o9U2ahRs7nNjbSEF/21RaKnDKIINey3bmyjCVLWuXDMdRevA
TKfCFoq7STqLWxeOojDSk7u1ncKNa+2ylhFD1+WUv14nxd+mesGW78SI0c4J
GfhIQec3p5tViOGZ15ecMEBhHMQVJV0Wo/SIFn+XiGLuihq3yFNimNpZ3TKh
FL6FutHRe8W4pNxZJBVTaPjoD+lAjM9VpwUVUgqPLuuvDhmIcSAt980lBcXZ
2IB0G8UI6r1etO4bn/4j+sN4R/UIHL4e6Fs1SZHcab2+9sII/js8WzY1ReEn
qrfVUxnBP53PbZE=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#20"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Ruxy2TNixij+B1IQXwg=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$3853#21"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.001, 1.0002331771270594`}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 1.0002331771270594`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.001, 1}, {1.0002331771270594`, 3.9999999818775507`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", 
           RowBox[{"-", "1.`"}]}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", 
           RowBox[{"-", "0.9`"}]}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", 
           RowBox[{"-", "0.8`"}]}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", 
           RowBox[{"-", "0.7`"}]}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", 
           RowBox[{"-", "0.6`"}]}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", 
           RowBox[{"-", "0.5`"}]}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", 
           RowBox[{"-", "0.3999999999999999`"}]}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", 
           RowBox[{"-", "0.29999999999999993`"}]}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", 
           RowBox[{"-", "0.19999999999999996`"}]}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", 
           RowBox[{"-", "0.09999999999999998`"}]}], ")"}], 
       RowBox[{"1", "+", 
         RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "-", 
              FractionBox[
               SuperscriptBox["a", "2"], "3"]}]], " ", 
           RowBox[{"cos", "(", 
             RowBox[{
               FractionBox["1", "3"], " ", 
               RowBox[{
                 SuperscriptBox["cos", 
                  RowBox[{"-", "1"}]], "(", 
                 FractionBox[
                  RowBox[{"1", "-", 
                    SuperscriptBox["a", "2"]}], 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    FractionBox[
                    SuperscriptBox["a", "2"], "3"]}], ")"}], 
                   RowBox[{"3", "/", "2"}]]], ")"}]}], ")"}]}]}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", "0.10000000000000009`"}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", "0.20000000000000018`"}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", "0.30000000000000004`"}], ")"}], 
       RowBox[{"KerrGeoPhotonSphereRadius", "(", 
         RowBox[{"a", ",", "0.40000000000000013`"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.75, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.571589, 0.586483, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.915, 0.3325, 0.2125]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.40082222609352647, 0.5220066643438841, \
0.85]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.9728288904374106, 0.621644452187053, \
0.07336199581899142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.736782672705901, 0.358, 0.5030266573755369]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.28026441037696703, 0.715, \
0.4292089322474965]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm], ",", 
               TagBox[#10, HoldForm], ",", 
               TagBox[#11, HoldForm], ",", 
               TagBox[#12, HoldForm], ",", 
               TagBox[#13, HoldForm], ",", 
               TagBox[#14, HoldForm], ",", 
               TagBox[#15, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], 
     "]"}]& )]], \
"Output",ExpressionUUID->"60fa0d9f-69c7-494a-bcaf-74452df75a71"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IBSO", \
"Subsubsection",ExpressionUUID->"06f87e6f-cc3b-4944-a7a4-92dd5d7eb961"],

Cell["\<\
You can also calculate the radius of the inner-most bound spherical orbit\
\>", "Text",ExpressionUUID->"d9702a66-a518-4cb5-baf6-50a4b4d52961"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"KerrGeoIBSO", "[", 
  RowBox[{"a", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoIBSO", "[", 
  RowBox[{"1", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"KerrGeoIBSO", "[", 
  RowBox[{"0.9`40", ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Pi]", "/", "9"}], "]"}]}], 
  "]"}]}], "Input",ExpressionUUID->"6ab12a78-36d1-43fc-a0f3-8f7439171ee8"],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"2", " ", 
   SqrtBox[
    RowBox[{"1", "-", "a"}]]}], "-", 
  "a"}]], "Output",ExpressionUUID->"b75303a9-9c74-4489-8b9c-387ca5dc2448"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox["1", 
   SqrtBox[
    FractionBox["6", 
     RowBox[{"4", "+", 
      FractionBox["4", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"19", "+", 
          RowBox[{"3", " ", 
           SqrtBox["33"]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"19", "+", 
         RowBox[{"3", " ", 
          SqrtBox["33"]}]}], ")"}], 
       RowBox[{"1", "/", "3"}]]}]]]], "+", 
  FractionBox["1", 
   SqrtBox[
    FractionBox["6", 
     RowBox[{"8", "-", 
      FractionBox["4", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"19", "+", 
          RowBox[{"3", " ", 
           SqrtBox["33"]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"19", "+", 
         RowBox[{"3", " ", 
          SqrtBox["33"]}]}], ")"}], 
       RowBox[{"1", "/", "3"}]], "+", 
      RowBox[{"6", " ", 
       SqrtBox[
        FractionBox["6", 
         RowBox[{"4", "+", 
          FractionBox["4", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"19", "+", 
              RowBox[{"3", " ", 
               SqrtBox["33"]}]}], ")"}], 
            RowBox[{"1", "/", "3"}]]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"19", "+", 
             RowBox[{"3", " ", 
              SqrtBox["33"]}]}], ")"}], 
           RowBox[{
           "1", "/", 
            "3"}]]}]]]}]}]]]]}]], \
"Output",ExpressionUUID->"03982e5c-50c1-4d38-a792-5b4062c46695"],

Cell[BoxData["1.7889831882617457021756958543874453959281531399471889323779`39.\
"], "Output",ExpressionUUID->"4e027f03-bd1c-4d32-897a-8e2737d2778a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ISSO", \
"Subsubsection",ExpressionUUID->"6e31ac25-7dd3-4c95-96e5-5f043e415f4c"],

Cell[TextData[{
 "You can also calculate the radius of the inner-most stable spherical orbit. \
For equatorial orbits ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "ISSO"], "=", 
    SubscriptBox["r", "ISCO"]}], TraditionalForm]],ExpressionUUID->
  "2a6a1fb5-e4e1-4fb3-b101-46878bd5db37"]
}], "Text",ExpressionUUID->"3f9df3fe-c5c2-426c-b9e9-82aa0437e446"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KerrGeoISSO", "[", 
   RowBox[{"a", ",", "1"}], "]"}], "\[Equal]", 
  RowBox[{"KerrGeoISCO", "[", 
   RowBox[{"a", ",", "1"}], 
   "]"}]}]], "Input",ExpressionUUID->"8604a597-cb74-4a61-96a5-3bd0ee92c700"],

Cell[BoxData["True"], \
"Output",ExpressionUUID->"c6daae11-a92a-416b-91b0-09053ca1556a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoISSO", "[", 
  RowBox[{"1", ",", "0"}], 
  "]"}]], "Input",ExpressionUUID->"3cb44bf9-63f5-4475-a5c9-678b88c48ea7"],

Cell[BoxData[
 RowBox[{"1", "+", 
  SqrtBox["3"], "+", 
  SqrtBox[
   RowBox[{"3", "+", 
    RowBox[{"2", " ", 
     SqrtBox[
      "3"]}]}]]}]], \
"Output",ExpressionUUID->"87d94a5a-0f68-41ff-8cce-e56029163f79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KerrGeoISSO", "[", 
  RowBox[{"0.8`40", ",", "0.6`40"}], 
  "]"}]], "Input",ExpressionUUID->"a2a1b8d6-5f0f-4cac-a81f-1303e2c32f08"],

Cell[BoxData["3.8630278508110029658311749903574468575809428869379306709245`35.\
19493316748207"], \
"Output",ExpressionUUID->"791a4d2d-e8a3-45ef-ba21-e9bbcde5dd2e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute the orbital trajectory", \
"Subsection",ExpressionUUID->"cf9c726b-e59c-4df3-bb12-58a2a02d9077"],

Cell["\<\
The function KerrGeoOrbit computes the orbital trajectory and various \
properties of the orbit. The function returns a KerrGeoOrbitFunction which \
can be queried for various information about the orbit. In general there are \
two methods to compute the trajectory numerically (following \
arXiv:1506.04742) and analytically (following arXiv:0906.1420).\
\>", "Text",ExpressionUUID->"e99ad113-7043-4743-87a1-4a4a277bb572"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"orbit", "=", 
  RowBox[{"KerrGeoOrbit", "[", 
   RowBox[{"0.98", ",", "5", ",", "0.7", ",", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Pi]", "/", "4"}], "]"}]}], 
   "]"}]}]], "Input",ExpressionUUID->"aedb8756-470f-4df2-a1be-dcc06550c34d"],

Cell[BoxData["\<\"KerrGeoOrbitFunction[0.98,5,0.7,0.707107,<<>>]\"\>"], \
"Output",ExpressionUUID->"200984f8-b946-49f2-84f8-a661271df985"]
}, Open  ]],

Cell["\<\
The KerrGeoOrbitFunction[] can be queried for various properties of the orbit\
\
\>", "Text",ExpressionUUID->"133eeae7-a1d8-4669-8d3f-c9e2a9e87e42"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"orbit", "[", "\"\<Energy\>\"", "]"}], ",", 
   RowBox[{"orbit", "[", "\"\<AngularMomentum\>\"", "]"}], ",", 
   RowBox[{"orbit", "[", "\"\<CarterConstant\>\"", "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"orbit", "[", "\"\<ConstantsOfMotion\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"orbit", "[", "\"\<Frequencies\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"orbit", "[", "\"\<RadialRoots\>\"", 
  "]"}]}], "Input",ExpressionUUID->"6cd6a07c-928c-46a1-ac87-08a723fb43bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9524815523088461`", ",", "2.004890163487704`", ",", 
   "4.064136991833693`"}], 
  "}"}]], "Output",ExpressionUUID->"241db507-73ae-4073-90fc-be6ed97391c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9524815523088461`", ",", "2.004890163487704`", ",", 
   "4.064136991833693`"}], 
  "}"}]], "Output",ExpressionUUID->"47dbc8ac-f15c-4891-bd49-128e0c2022d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.6838880211648717`", ",", "2.8470993686441957`", ",", 
   "3.373481125134618`"}], 
  "}"}]], "Output",ExpressionUUID->"952a451e-02f4-40ff-a364-0c643ad3349d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "16.666666666666664`", ",", "2.9411764705882355`", ",", 
   "1.2764089902425844`", ",", "0.6723750951840608`"}], 
  "}"}]], "Output",ExpressionUUID->"60ffac1e-71b2-44e1-b48b-530e1c3f9f59"]
}, Open  ]],

Cell["You can also extract functions for the orbital trajectory", \
"Text",ExpressionUUID->"a386befb-0a15-498a-b5b3-efc07878f86d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], "=", 
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"532ac85d-fe6e-4c74-92e9-0b525ef750f7"],

Cell["\<\
Evaluating these functions is equivalent to evaluating the \
KerrGeoOrbitFunction[]\
\>", "Text",ExpressionUUID->"1d57e145-b9cf-44ff-a485-8e0dbb668566"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"t", "[", "\[Lambda]", "]"}], ",", 
    RowBox[{"r", "[", "\[Lambda]", "]"}], ",", 
    RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], ",", 
    RowBox[{"\[Phi]", "[", "\[Lambda]", "]"}]}], "}"}], "/.", 
  RowBox[{"\[Lambda]", "\[Rule]", "10"}]}], "\[IndentingNewLine]", 
 RowBox[{"orbit", "[", "10", 
  "]"}]}], "Input",ExpressionUUID->"7ea80e39-9cdf-4e18-9ac7-0c558099f822"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "810.1666326027138`", ",", "6.172438255612828`", ",", "2.3371507680129784`",
    ",", "33.58756718487403`"}], 
  "}"}]], "Output",ExpressionUUID->"edde795b-8710-4333-b9a2-477f83e76161"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "810.1666326027138`", ",", "6.172438255612828`", ",", "2.3371507680129784`",
    ",", "33.58756718487403`"}], 
  "}"}]], "Output",ExpressionUUID->"2a5459c0-3377-4e5b-a8ed-98bb92b14215"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equatorial orbits", \
"Subsubsection",ExpressionUUID->"e3da79cd-e77f-483e-a350-2112e9984f11"],

Cell["\<\
For equatorial orbits you can parametrize the orbit by either Mino time, \
\[Lambda], or the Darwin relativistic anomaly, \[Chi].\
\>", "Text",ExpressionUUID->"c636f615-524d-4d49-a984-37613c624936"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"orbitMino", "=", 
  RowBox[{"KerrGeoOrbit", "[", 
   RowBox[{"0.9", ",", "7", ",", "0.7", ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"orbitDarwin", "=", 
  RowBox[{"KerrGeoOrbit", "[", 
   RowBox[{"0.9", ",", "7", ",", "0.7", ",", "1", ",", 
    RowBox[{"Parametrization", "\[Rule]", "\"\<Darwin\>\""}]}], 
   "]"}]}]}], "Input",ExpressionUUID->"bc13a264-0191-422f-9831-b3c7d7f35849"],

Cell[BoxData["\<\"KerrGeoOrbitFunction[0.9,7,0.7,1.,<<>>]\"\>"], \
"Output",ExpressionUUID->"40442445-020c-4457-841a-59c99417b9b2"],

Cell[BoxData["\<\"KerrGeoOrbitFunction[0.9,7,0.7,1.,<<>>]\"\>"], \
"Output",ExpressionUUID->"74340701-fdd4-4a1a-a517-fabe053a33d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"orbitMino", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"orbitDarwin", "[", "1", 
  "]"}]}], "Input",ExpressionUUID->"17721c10-d834-486b-89de-696cd2e0904f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "56.25171954969578`", ",", "12.080056861503293`", ",", 
   "1.5707963267948966`", ",", "3.4092723635335034`"}], 
  "}"}]], "Output",ExpressionUUID->"4e74cbfa-1da1-482d-9922-4d051734b3cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "15.059776643042497`", ",", "5.079045865196865`", ",", 
   "1.5707963267948966`", ",", "1.6573910848434852`"}], 
  "}"}]], "Output",ExpressionUUID->"10ef9740-0cb1-4fdb-9b59-905f70e29ba6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tM", ",", "rM", ",", "\[Theta]M", ",", "\[Phi]M"}], "}"}], "=", 
   RowBox[{"orbitMino", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tD", ",", "rD", ",", "\[Theta]D", ",", "\[Phi]D"}], "}"}], "=", 
   RowBox[{"orbitDarwin", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"1f76600c-e9e0-499c-9eb3-b000dc8e48d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"rM", "[", "\[Lambda]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]M", "[", "\[Lambda]", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"rM", "[", "\[Lambda]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]M", "[", "\[Lambda]", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"rD", "[", "\[Chi]", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]D", "[", "\[Chi]", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"rD", "[", "\[Chi]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]D", "[", "\[Chi]", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Chi]", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Disk", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"1", "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         SuperscriptBox["0.9", "2"]}], "]"}]}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"a17718b4-a6eb-4301-ae02-ddc09d385b1d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
9vukZLvIBGF/9dUFDRs62LryX3pnOE5Y5rm4yrEY97fMrd/7j7jDqyqSzprf
Myz0xj14jPjwpl32Pmu9ri8rRnTujxJ/Tv0SM2L589U6F04k/iXs/LQjtrHi
cb9m0ujXNUJo39g8PWlOh4xtjvI8+sNE7rD/pBorHx8zwfIx1n077GmiQN9a
OtynpMut/9pPWL0zKNNj6XHs5Lnwv2q/iYf69/L4WHoV8q7ZsSK4l9BvHth4
nKXnqi+32hIafxGqwW2KB1l6X7niez5aq5sot2RU9yjT4cbxxrClsE7iyYfF
sinW/hi45Kd9JduJN+Lt6bck6GDOjHR4GNBKiA43tlZT6VDTO9oeYfSNeL7z
N2/MCjq0CTe2nB5vJITSuJ90c9BB69O6Yb9XdUTogsDOqjkadCqk5TeGlxFO
JrTyrQM0qPjo9ix39Vsi3Swv889PGqT3poUpD+QTJ0MOZCk20+DvctfbjLb7
5Lh0vqlNKQ3axpTmU/g/kyFLJ1PvJrDOz9/XhpFyDaTPiuykv+E0MKa/3VVm
1ESSDdeXvgWw5j+v2nh79w/yKzvT/KwLDe5KcPOfLvpFbnO88WiASQN5MUWX
NuNe0tXzkLEgjQa1IwtmHs/7SNkrcSE17DSIDPNqKM0eIPfuMb+p2EkFP5nu
YT3fv+S//w6KWNyiwpeLYlEpl0dJy2FdmzehVJhTdNnjYz1GFqhYjn44TgVo
tA33+/KP/Plt/kDkBirsfA0ZXXWTZFT63Znp3xTQ0F9XJxczRXYbPnjHW0cB
W3OJcnHbadIfNIufFFGgb9j9ocH7GVKloGw9GU4Bjp9qt8uS58n9jI27hGQp
UHXtjPwtmwUylJMR8oudAhkdlxdp8wvkXe/Bwke1IrAt2qBywnGJXAjiMlHe
JwIXBe5cjQ9lwwuafWELp4Qha0OLVJgwJ97zerk3N1AQIp5yhCTt40Qy2pI/
cZUg7Puyff3vPE4kDstq1E0KQAYvKW1twYULwstrNh4XAL3et2nfvblR5o/2
4017VsDKZHp97TNuzD/35/OIyAowNLjiODPDjQFuhiljn/jBj/mNfyyMB1uU
dH9Jm/DDj4JdI7aJvNhQ4jakKcAHv60Unv/4yovard9+TLznhdlX0tvTRPnQ
x2hIQes0L2QeSuW5f4MP00Zf3PvVzAMGhyVOFEfyY/e9Z/mvUrhhXMeQT3mT
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
gtX5ayYElP3Duyw3SwH+Bxusbi8=
       "]]},
     Annotation[#, "Charting`Private`Tag$6848#1"]& ]}, {{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
IOCfURK9Yb8qxKTyLlNWE5gSyf54UlsVSRf2P2t0J0B03+nMqVWBb4K4O9+T
gJ1u4QP8UQZTpCJslw+BxIvngt+cVcavhiwGx59AYcadnyu5wjnm0y3ulUAC
09/EyMKnDEwkerz6HEQgspxq+D6MgTcGCxUGgwnk7ZeInZZhoNPl1bcrIQTK
93rTxYrpOFP6/bj5dgLhmg3LfzrTYeQyJBYRSiDl0NfdLR9omM/M2L4njMBt
lcie9AQaIv449DqHEzBaWd63SoMGUfdLyU+FHPojvnX6phLeDX2I195BYGvR
/O8X3ZWwxe/4oLmQPToPp9v9oGLLn9M/ZgnZSkNTvuU4Fb/lFpIZwvtqgpoL
XiwqBlfaJHwX6ruq9uPfoUYKYp8FeckJuUJJnhkbSEHnZ9mUYaG98az+UhlR
Cs4/KrY7sY3AbKnbnnnZilghPnnx11YCaXs0wmCniNg3o6PaQv9HFWNd2soU
UDz/dri8MD5GHcUhNp/k4daZufxuAIFZh2cu39KRh+dL0Udz/Qh42dhs8d4g
h81row0ivAmwvq7W3JIriz7Z+uorGwmsMH2z49SADDoVvi6oWE+giiA/B0ZJ
46+0vqyWML+CPeVTigIpMOcdaTwizD+N0ZLyVVwK4Vl7/OqXEsK6OvjfsnQJ
1JrXsHIXCuPzt0q8vVscGY873jkvIDA5PO2WbiIu3BetwmpsCXScoIwN3RJD
iZjqQnkLAu1BV3xVekUxqhy/LVKNQGYREfidLYrArE1Pz9EI+O22k9CPEUEj
ccDzuDwB06AbfXN1p/nZR3wkh0UJBF8fUIlOHuefnrXz0oGPPHgxPvZsMhjj
s19tf2nTzUOf02wfvbu/+JeH86vIVzwc/Kv7Y/PUD36kh8irFQ95CFt6QK99
1hA/o2DAMqiIh7jbgQodLgP8V/WZ/vcu8NDN2XB38mQ/371oWPzXGR46Dmb/
LmW95+fLrtboTuThtU1ZdHL3fb5d2q47bV48GIpfX/3lYBU//RcaB9fwMDpU
t11jJoLPDPlo2+XCw+JT3+dVr28QsDQPdKzm8eC213PmxHiXYEpOsWmvtPC9
+Ly8103hg8Dk9I+m0BkumO4601dz+gRt8za42I1yseRCUcu6m58Fv+f2Lw3p
5KI7PT/Opu+7YOPGc+GW5VysO3br17vySUGjU6LCDRcu/OgrD82ITQkc7ep3
0Oy5MFAs/U54TgsUV/88vNKMC7r1TPXgXhHydfwJhY3yXHxLa4iops0mrXXd
Z162WePPPzLrKiiSJG8wK6RzpTWcY8iB/FJJclltmqUd3xov3JIDUxdJkZ4j
49vjONawaFgqZx0lTer/eOVXJmsN8+fU5OomWRIqWhJdjVbYFNUou++iInnD
IUjvo60VGrtvyfn3K5JyF5uLHxpbYXTBAoObphSSljD+Op1uhZrewhnBVQp5
M7RFe3rEEpcoD0/Y36SSKw0Sb4wVWmI3tc+go5RGOri4qEsoWiJ1xUjW2ACN
XOBuFDn81wI6WjcpyQZ0MitluPX+ZwuQbbQTczLp5J1V4tYe9RZ4P7K5Piqe
QV5xWuv7J8IC2uduzLGtYpDvx3L8j/pboNR/14vwLwxSvkW0nLrSAjZDwab8
DcpkzdkXV6VNLLBPoD/v9QllMrtxkh0nnD86wk3+fGpQJlek5iT0iVhArOVR
RdgfZfLW3icyx9+aw3fon8rtbBUyfKKOv+iaOf4HsdyM7Q==
       "]]},
     Annotation[#, "Charting`Private`Tag$6871#1"]& ]}, 
   DiskBox[{0, 0}, 1.4358898943540672]},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{-17.656642348871436`, 
   19.92305378288388}, {-23.231829220926972`, 22.43825310207363}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{
   Automatic, 
    Automatic}]], \
"Output",ExpressionUUID->"59beb132-e1c7-403c-9584-3ccbd21f4db2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generic, non-equatorial orbits", \
"Subsubsection",ExpressionUUID->"c5ba8c3f-7e82-4516-88dd-af18522fa177"],

Cell["\<\
For these orbits you can only use Mino time as a parametrization\
\>", "Text",ExpressionUUID->"a39ad588-5b74-44ad-9846-0aba2da87d55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"orbit", "=", 
   RowBox[{"KerrGeoOrbit", "[", 
    RowBox[{"0.99", ",", "4", ",", "0.6", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Pi]", "/", "4"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"9bd1b274-a9a7-432d-89bb-5cec56e2e179"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], "=", 
   RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"018eb030-471c-4e15-9414-738a297a734f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"r", "[", "\[Lambda]", "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "\[Lambda]", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"r", "[", "\[Lambda]", "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "\[Lambda]", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"r", "[", "\[Lambda]", "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Sphere", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"1", "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         SuperscriptBox["0.99", "2"]}], "]"}]}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"ffc6c7e5-72f7-4b3a-8376-45db7ef31354"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
mhtzcyZQr79HitVmGoz11wqw+kLFsNy6vvjvX2QyXv9qiy4NXuKY8Wd9pWJK
y0atF+r/0Oo6Q9OgLTS4r4zk+uEbT7dtTiXr9KaQZTJz2UiPBqe6DtGdEBVr
uJFDuxt5/e8h66Q9D1cqGH72mYdP6hzkX/CaRjfrmgd6eTxfA/UvfuDhW4Yf
tF2RZqDR8lrFWl5cQqwv+RgPX9h/Ms70EwOdt0CRyjo0+LutsP0pL+6tX8UN
V21m0CHu+h/tWjS4d++nKyG8PI8elVNmsmbQqySNY+xNNHjl3OJ2Od6+itdJ
SdQmzqIen5jvvhto0L5zoNCSpwP7RKE2e/scmu7+nu6iSoMStFBnZZ5u/rFx
q40DmGjQyWiFowINfrvupJz/nor37zZfOqA6jyw7LxZ5StPgHw20wSubiofc
Q9a+rZxHJk0mGqMraNCPu3ZX/Vsq1iOZAW2xBXSs5V4Jm+cPfktCDy+nUvH2
Uo15zRe8uf6aZGVWGxW+3X2sVCmCis8xVBy6XQlYgHBdj+hBheHfjHy7ral4
Vql/g3wJAWudXrDPO02Fzg92SD/bTcVT804LzopEPMg40/5qPxVKDP1i9hhR
sW5XV7l6HRGnvJc/aaFGhbvnz7awVKi4jG3ra2ZExlab7PSC6ylQK8im7Siv
Th+ezH+uKEbDZGIB/R6JAs34it9u9KBgK5nLZRezhfDneyeOfq8hwt4n9ZqX
RMn4rMMrWRd+Yfx1+6zj9Esi9JU3FU6eJeFhqnOUjqMwpqvarDz2HxGS2wx3
m7SSMOHa9QJzCRE8H/j++A9lIlwL+JX/JJPwB7m0s6s9VuBK/ZhnR88TYLIO
o3XNBhJOkrknfCxaDHs43uAXzFgElR8SUspWEvHbtMOUzxskscAjc8tWFSZg
bTvv+UR1EUmUUxrr9ktiv7M2ubcy5oC2k1NPeS0X3Vm8/arAUxIX3fZa/LFx
Dpz3s2b/ucFFIqed1//7Iokvi8PaC+qzoO8MY+BJBQeJMDwNGvdJ4ZYM1bQu
RQaQWp+tkWPDRk6tUhdjHKXxtuTcl1YB40D4COfwkZ3zqCtD+puwjSxmdioZ
JNv9Bk3aTTZHtk6h+AW+0hJPWSx+Ke1bS3gVyA1Vaba//g/tWFe3WfmhLL7+
5AWatSsH6o5vUvJuT6JH+47sbKmQxco9QTn9H/OBgY6RinXoBBr2K/Re1JHD
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
       "]]},
     Annotation[#, "Charting`Private`Tag$6975#1"]& ]}, 
   SphereBox[{0, 0, 0}, 1.141067359796659]},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->800,
  Method->{},
  PlotRange->{{-6.842753793933155, 6.85921922343373}, {-7.269267566797659, 
   7.093818899233955}, {-2.718613847383622, 7.066464910920195}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.378494761325604, -1.1292236585153317`, 2.1254685599641103`},
  ViewVertical->{-0.051428907465816395`, 0.0054763692425021104`, 
   1.4660662857871904`}]], \
"Output",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJyUfQdcV9mVP6vjzDgl2SSbZJPdJJNkk+xs6mR67733ale6igKKiCJF6R0F
pCMo9oYiShEQ7A2x9zqWcRx79/zP9757Hvf9fJj58/k89Pf4vXPPPff0c+59
b/cJ8R0wsE+IX78+9706tE+Qr1+/4PteGTyUb3X9Ny+vrvd5eXW5fp8X/k9e
XvKrnfjHqyvt3LmTDh8+rD6R/fOm+uy1Sf1zO7W3t9OwYcMoMTFRXatWraIj
R450fP918/vdady4cVRcXEznzp1Tz2ZnZ1N8fLz5rDHYK9bDbRqjLVu20MCB
A6moqIg/4d4ddObMGdq8eTNlZWVRQkJCJ4BedALKzMyk3NxcKigo4DncDCgp
KYkmT56sMLx+/boB6DkL0Eb1z220YcMG9cDSpUspLy+vuwFr0aJFCg4Qqqio
cIH1tBMWvrxjxw5qaWkBcvdoWLhVXV39L2A9YcHaoP7ppvBKTk7GlxRuDM/r
h7cACMo6AT7qBIgvb9qkVpEaGxtpwoQJXj/2ABgZGUljx45VAPFdJ8CHLIDr
NeNs3LhRYXj16lW6ceMGzZo1i2bMmPEfGuacOXOotLSUFi9erMbG0q5evdpj
Wf/phGkiiZmHh4fTsWPHfqJX/fjx4wrHs2fPenXRj2zfvl3xIODjuol//24N
sU7jZaItw4waNYq+/vprLxnn5MmT+KyX1bon3MVj8dg8Et8zxjLm9GfngBhM
5uQ54K/0d06fPq1WUCaCVb2ZWPdbgNdqjIyZaGp0dQC/z8BcS6qNuQbugfkf
nAMAOB7EJ7cBfq+xlwFMwbuZfaxve63xwP7atWtaFTiB/9EgjUgiSCO8ySxn
AL/PCdzE3A34/Ro4NKQJHJi3tbUp4E/p5xhBGcUacLc11mqXiXTT9zCOkPfP
txhLJmLJaje6cuWKEpz8/HwqLCyk3bt3u45pyInNoOvWraOMjAy6fPmy199d
xgRPmWNa4nw7rVy5Uv0dTL9161aFGwuYGnaXNewqY6opKSmOqdbV1SlNjE//
1CAxLPQJyGLI/V/Un+9Ufy4rK6Py8nJ1TZo0CTNVS80jC6thMviqTfidTmww
ISGCYNPQ0GBj87DGBhrCNC4am/v1I99++60SbOYX5nL8voNOnToFvaME/Pz5
87R//34aM2YMffPNN14mYVa6EOZ2F1Qe1fcwQ22ieCwmj4cS+bOeDL4zYsQI
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
kfkKDGGhcBcSPSS0YDWS37Gv8tf6NmiBBURLAzP4M8a6QsrEMT7+7Xm7YdBW
SNOgkGqtXbvxFplOfndBMnAiZcjn8iNyRiRkEa0FPHXN3pZPBZ9YyayFCCRN
cgZV2phMrd1qe2x43Y5EVNKNAEdQ1LYHlUxG6pxKOI7kgD5BYL2dHZG2fRYl
29DsPMiOMosYPF5sgEbE/Y4tYpYWgkMgWsh2/c5ektPtOkRsn5e4g+xrU0LZ
CvJLaaRNu088LCzEATpYCF9PKF9LbbuO29kKNJKhww+9OgePnZataDBrEmLJ
GWaYME6yQSYbQgdiaDqZ734RP2ikC53EmKqW7pwmtWXh8Imz9+nbaEH3T2mi
caXL4d0/YQgcEgyINoAne04d1ILOXr5HteJB4PqNs0LttZZCktrdd0rglrFb
o0ouYvDQlYo+P/jPV6/eeNBgKHCNKhawhptauw08KNk1uALYaaB8pONnzFcP
SAjmp1HHznpEEMhYo40RVQEPmknkisduRTMoh/7smGC2rMSFZugJRJyBncaM
2OMGzQrY0/TLWK32okICpTkU0od6CIqyclanUlKnL4FmVpDX3dPO4S7aLdXm
M+xPw9YGeQlkO7sDSRVrFIsllq9RLPayB7mCs5ehXVlkxYzF/DUY1PgRruMd
6DjSDgcBa3KZL0ESFpM3oZhJMHFkj+jt9Dhqi8Xrt/o2JhKkXO1q2PTHDHIV
ztukQlMVkp2/rNNud+iwfb2dGlXkqtmiKtH/pUlaytKIv6GxCD8z67erWuuc
pp3wPv5hM9ZVg7EW0bTa7cBIXB6cdI4AmEXD3vMtJm/fvn12cxlqJNKa/kcn
eUxuki0NIA2CF+TB5E3MaMbA2iPXLP0gIK3heT9q3yZFG73J7U09ZTjWNmmw
xcLwlk6KEb1D7QrHVIdmWPUaS4GvYH99t73/f/OebyhpsnCPpaBeN5Fi5Y7o
hp+VN2Cb6cHBxtxRWjPIIm66uUdRuAaVdUmJObgmGVzTgMX6vb691M4BqfyW
+A2SZQZlGtbuf0NT5sLFTjS4pZN+oykDnOpVC06dgoKIHaeqsObW2yJuV5F8
KuwrmpBZE02rU5roLY1AlUpzWAdLXb9xQ85ckWgN1k16X8zkuwdxzGhNiGPu
3ZLXLJg+QPP6g/+jbzvcSKlP36Za2kO1jWPivK6JI062pbBROpfc6FHM7Hd6
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
2aY2uyJYwA/6ebEPYdu+k/YRP/gbGs7Q41O/Zn+iXhWzoVRef2EVU2opPLfZ
tkVmy5vmINlXJkeBokTpFuBKkynciyCcrMhKj6NTOa5OIhywkpTJwF5warVK
sgt8sLno6kUfNvtb0syGA0iwMwLHBXJ0Zk35DdUlk8MKzsqdiuPyKvmy4+L/
wCvk/zjHM5+EU+8R0+krnIDGdmbwx+EU9kJfGvlifxr1eiBFvj2Eoj4YRjGf
jKSxX0RSfM9YSuyXQEneKZTin0GpA8dTelAeZYYUUtbwUspmmzB+1BSaMGY6
5cTMotyxcykvvoomJlbTxOTFlJ9aS/lMhPzMRirIbqaCCa1UkLeCCiauooL8
1VRQuJYKitZTQfFGyi9po/zSTTSxrJ3yyjZT7qQtlDNpK+WUb6PxfGXzlTVp
G2XwlVa2jVL5SirdQgnMdeMKNlFM/kYak7eBRrG+Gpm9knUVOzgpbMdYL4bF
VlFkzAy6dFG/X/ZuzWVX3LksYTG7ittUVg3d5NIPDn7Dd1WL2Lajv9TL33E2
xF4v4TSzPGP2SKMtE03tU2u3SjZF3GIE7B7MZoZKUmZHoRWG7/z58/aOglb9
/k6dy7nd8Iza2tpUBGXqMDAbmBCOuFQk0R2Gwydx9uY1aWeyWrKwa9M3yfCS
36TayZUU+OhztgH0YVXm989XyO+xd2nAJxwRjZhGPeLqqdfoueTXL5mGvdCL
Rj7zJUW83J8iX/enqHcGU8wHITSWvxv/BftrvaIpuV8cpfokU3pAOmUOyqas
obk0PrSAJoSVUG5EOeVFTqG86Gk0MXYm5cfNoYLEKipMXkhFaTVUnFFLxVn1
VDy+kUpyllFJXiuV5K+g0sLVVFq0lkpK1lFJ6XoqKdtIJeWbqKRiMxVP3sLX
Viqcso2v7VRQuZ3yK3fSRL7y+Mrha8KUnZTNVxZf6RU7KLV8O4c2Wym+hJmO
VV9MQRtF5jHDjV9F4VlsGNMa2auuoRFjq6h8ciPduC55c4vjzt2C4xBzr+dV
AMfJsSM4VR6eVOrkVXbLN46XQOm8bvV+u9JrHnAgp21hr7Oq8Cer1zhLchcu
tPjZmt3kaHU33WZG5rKvYFnbYYUB9tZKlchM3Uh0Bp6Dr4U+QSg28d3wBhuU
tFdu/tqO4JH4x1ZIpGksLnuLLpw7R2FvfcAG01JpPg88T74PsFp7tT/H3DNs
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
tnNi4moSrWQcOBaEU1sv4dSO67i0/jh8lm3Dg893wH/VDgSu24OnXx1B0PaT
CN59Hq8OXEbot7cQdsIHEWfuI/LCY0RdDkT09ReIvfUK8T5hSLgXiaSH0Uh+
EoeUwCSkPU9DenAmMl7lIPNNATLDi5EVWYbs95XIialBblwdchMakZukQF5K
K/LS2pGf0YX8rG7k5/QiP7cf+fmDyCsYQl6hCnnFI8grGUVuiQY5pVrklOmQ
XTaG7HI9MssNyChn/8KAtAojUmkl00osMyK+1IBYQja6mHAt0uEtiXhY3ihe
54zgZeYQnqcPEKo9eEgB610KYm+9qcHVoBLceJxKfotrfpYfH8jm9Lbv21pm
UBwKNxOa3EiTbSbFaOI8GGci2DVm7RM307NiPjqvQ6iyZ9XaAjo9VdnzHDvX
IOXn53/XZm92VjprxOUyI2Pj7mKJP5OEmblnYRaVKp7C7Jyk+LhuBIcfFGIP
z2nnESxZnVIJnqyy8sgc93QJboy5+0429hGRXMrkvjRfSY7W67Q2yfnmo+zh
6c04+tmXOPCrVdi37SoOfuONQ3vIZ7iSIOXFOH/xtW8xrSLp892E49HTr3F5
vw+uHrqHwJ1n8IKwe73fC28PXUbksVuIPO2LqPMPEX3JH7HXniH+1ksk+IQi
6X4EUvyikPokFumB9N6epyDzZQayXmcj+00eciIKkfuuFHnvK5AfW438+DoU
JDagIFmBwtQWFKa3oyizE0XZPSjK60NRfj+KCgZIW1QoKh5GUekoisrUKCzX
oLBCh4KKMRRU6pFfZUBetRG5tHKqTcimlVVtRgatdFqpVSYkV5qQWGFCfLkR
sWV6vCcVjSQEw0llQ8nfCMlWEX798KfA8yEFoncjG3GdnDtvcu0Hh8fE2QTu
0Xs7zN1kqWvQKFo3cOETu4Jy4ZM4hS62rjktIUZC8YbkWbp5vCE5ZnKIzQCu
jBM92mTyRGc4z8lyQhc53ONCe34lUqanpa2kHGn0wj/INt5TF7kQ+7b3dZz2
8sbRG29wgYxYQW0/KCBwb6r+UCqEY0clPKONG9FJReR1HRr3775VcpKDEluk
aI69eXc/kwmMdHbg1MfLcPh/Lsbxf/4Y5/5lMbx+vhSXFq/HVVoX1x3Bif33
cGbfXRw59QrfcA0twbbFpwBb7+Rj9/UUWqk4dYl+w3NBCDgXgHfnHyD20mMk
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
MONnzFmU7a3bnUpaWlrAGu8Pz6KMOyVXpE1XrFiRZsZFuvPRCk93kmsa9zAh
hUtJzlRpghLioMcy4mS4Y5GokBCToFWHWE4solM3iMJDwanOK0sZVD14nKzu
UQrrnJGogSBrxNg4w9iF97+WXXFP/2zA80ODPBqa7dyxLdu7ty6Kq1PMx525
eFOwGJfG6rZAGSTIE/JU6qJ4A0H+n5boDstYBl0F3X1NTLhtrx1LMA0KakHF
TKcV0eeDyooCkrwC21giX03oW1awRGaYYa2LEBGuhINv71WLl/BvCYP49JZ2
CiKO+G7yOWMs9wzD4Oigf60o5uFJVjZ06X1DsjY3ts2uue7GbOCAZ7Ihg5/P
dmzfjtHy94mUwOSsIP3AJF6mRfyCCkdojJi2xkhRKVUfAfhFBSmS5FA1kheB
8hjAZYwA1BKzEzX6rrcSOr1hJ3R6u0R3f8ouubzjBLOqkl2iHrHbHptk4ZNg
TeblZLvzXNK4gNKxIsgYBT4rR+cNwUfgpiW75/K+4Vnru/pnt7Xtld12x91Z
90e7ZoNfiHc81IW95uM4Yt/0zj0HjbufTg48qKVaz5z1IfPtXnssGNVZeL2s
BPmJqBVaCyhOlwhGJfXIC3PNSw/0JPT6hqsSer3Zp8QYrzt37uzu/4pGTN9X
ikaMrjPMS4BefytVHbWwgCzMfnnHsSljZGH0mEw6OzsUtM+K9buy3sMWxWLk
hycGmfBGdvGDI7K7ug3P7u/6VPZo917ZHXcGh7f7I5Fsd2xHAKTNnh4jWUl8
0m9F8xTIJaqiaEhE8JFc7KHBiw3IDfQLlZXpF1FKN9MX0vex4xBOUxZuyJ8J
4SrwW8KuNxHV0u9ri4Tdd+zWtFqjRLN4DhzKb+MKFGuyAAoOW1HXsWJPyL0r
O49PhUGpde8D1nqH04thSejpkg7BwbarJcdkd/aemLXtPTK7o12f7KZb7siu
uf7mbOBzz2YvDXk+SNnt2dEjR2J0L3ZDILdpmBg0ZhmpdItiEbVCRjDDBIFN
BEW4VmpIqQ+I+aIKYpbKJzwgYg74rlGKYfWmPSZ3uThDuFZylXRKBa5lYQrX
KjDilUpyTW21H20OjMWbjjXc5XPbY7WmRNZv3ZvXc0DJVokdDKULktoKpBfz
1B+0USBC9FVdJpiZdVmnadkf7g9a7t5XswvufzW77I4+2WW3986uuOXh7OEO
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
TY6LMXgrN+4x8L9cAf6PEglCQsMmvWPg07TNIUJGDz8zI5u7dBuSuVCdSHsk
A3piw1QqKD298gSgIf6fE2D77AN1bfvok+8jy/dhqZWHRlk6p2EfC/J9/FXF
Pn7o9rFkzbtZtxegpngXBixBAJf9Ya1UVb/GYsjUvhcpKclx24MXOnwlnYXb
wmnGxTMWb8nu6zc1u9SBf0sCf8WG3fDB5yug/0EiIibhmnEdrBZOESIy3Rgg
f2vVjnJ9OYBH1Z43HUFEAM6fjIiaQUPhDwifAgX1Spjnkpjpb20ugA3GIgMs
yMbOXpOt2VJnmP+LCti/lzAv2HMKCtr26i7jaIkK4mG7OTV/WYH56LHnk+qE
eS+FyJE1SUHRKT/D9iH04/N5Trilx8Ss+4sLg0aFmW0vn3ZbkQH5j01tpUMc
J0TV2CvRTMm7VvwdTGkrGntIOC6dhREQPiO6AIZ2x2G76JHENH2ZEkf39I98
EKigGdsI8oCN4KSN41AClGgGXzUPljA4/yGBwGcWr96RPfrCHJNEcTe1+W7Y
ZSAsdQIhIIEQ2RrjWmlwQXOrxmMz7kxqPG1xLrkKjv77WcYS85dvtwG04mpo
WldKaXIVUmrFhl0maA8cPCJ72Buv30jHDINDjqjouKuZtiselzO77QyW2e67
4DAn6cqKuj4f/a9j0nWe7E7HFCiuWRrkR7gs/cRNRp/wTNvkPNvkIjsy8ueX
JHOTkdcmwh6blD0SNhrPbm0NV8LsIREVN5z2ljUyn76SEBl3vTffNc9CvAmR
2jl3aNNoNmfpVnb/1273supjtiLN/zgtP1eIVJKO3aN56H/yRKqBW1j984PB
On3RJmM3HBAT2J2nmt8KrZ6MFgxLS4AHiMOr9G8QzqaYNuxOmDjZMFF/6Gj2
7NNPZGPHjIrn9gHz5fhT+FBh8/gv2nw+ZLDTWEMAJGEIWLnjKxUIiIMSkp/W
QNgcN6rKEzYI4Ku5sOmWvqQzZ9DWU6+Zygofv+vxyfwb3I2EjfDJAFx4DzrA
KgAnzezfkw18mtFv7DQsu63byGY5cuZlvU3bcXUSvhxTKetyMommWktjbQLN
+sWGitiZmxB9RgOWHhpbxFTnsXZoaPc5SzYbjwb5/PUKbMW5GikiEGUa7I54
9syCWMDL9+Si2umIrG0gq+ak9O/UNzfaEMm7+04NuwywhPcuaft6duHDEwOk
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
+P5KPw==\
\>"],ExpressionUUID->"75e4cde8-b336-4199-bf8d-b6440fd9c57f"]
}, Open  ]],

Cell[TextData[{
 "Plot the motion in the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"r", ",", " ", 
     RowBox[{"Cos", "[", "\[Theta]"}]}]}], TraditionalForm]],ExpressionUUID->
  "037d3dba-aafa-42c1-80d7-6b7cf7a2ab33"],
 "]} plane"
}], "Text",ExpressionUUID->"ab6df91b-01c6-485b-af97-4824df69a1b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "[", "\[Lambda]", "]"}], ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], 
  "]"}]], "Input",ExpressionUUID->"ebe4694e-84a5-47b0-81ea-1b2da88654c7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, 
      TagBox[{
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[0.368417, 0.506779, 0.709798]], 
        LineBox[CompressedData["
1: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
fWnCb+3rHVd10GA3T2NsXVAbvlZpZibwlQb8k5E0yT8dWIMq8Ex0My/ox/tW
3nnfg0Pq6q4iN/J5fxbHuRjfh+2DvSYSw3jBRny5TsSGAbwtWvz3UA8vfNsu
mm/hOoy7XySfHvjDC1q/vl/JGh3BU+OGAwrqfKDwnrv10u4x3LOuxr7EkQ88
ayvMtavG8Z8PD/Y9C+OD3P2CEYryk3j4K7traSEfHP540XZ84xRGbfLsNhYf
GP6Ijtw6OIXjf/feGrSkg8yTfaXyFBZ+ndDvr3OZDmWZX38rx7CwkN5i+soS
OlSFljVtEWfjzWt6oY70xzJJm+x1t9nYUnzym5Q6Pzhz9j/r/sfGT6v7mzQP
84Ox0WfPL94c7DjYYCbyiB9Gtv8Q3N/Gwe27jE90M/nhSW9W2DcGF6dyvAtD
GALw7sdWl5tnuXj9bVlJjWMCwFoSOEWr5OLD58r4x/ME4FEBc5PlTy6+ESOX
mDsrAM+Mnlls0iKw4lo9/SfGpDfQ9YFXpB+u5obQRm8IwslV+8KbzhNYjL07
+cCwIHy8WdVrE03mT+1rmW2aQsAnELoGpRK4O0XDKPmSEHyJ0Zy4T+bZ1JL4
Xf69QqAmc1TV4z6BTZU3r/tPSxj6JwKXR98i8I8/NSbC14VB9TdJO38C5wm1
XZvjkNu1RDeb7iZwpNej6yVmIvC1Xl+DRfplzmbtwcPPRKAs+MgBuW9c/FPF
b58gnygkCvr6LCnm4teTpcOzhqKw2L68Jt+Hi43vzrTLBYhCxvv15qpSXHwh
euuobokoMCtH+QSKOLifxoQzG8XgL9+5d4JdbDx5rL3qVYAYWAk5LYm3Z+Nj
V19f31QtBi3nStb4NbDwIeZHxtKd4vAvU75sYyIT2/gWqPmnioPCzJnx0i9T
uEmo7aHrB3HIrRTwLjWZwmc3n6PVxEoAbWLom/T9cRy2gTKT/VsS8m9Gxo4p
DmIletrPw/ulYE35nx3m7v3YdUZbmVYrBemrVY+zEnsxq8S4Ti5BGsJybm5N
eduJtx9o+LrMbTlY5SZZhrnVYPOu4fAfZxSgzPaVfqEyRrcOPp/Zz6MIbRuQ
l3xIHQpfaq1yKkYR1pxydQo83IQCTZ/8d6BACSp/HKMV0jtRQunvA5PBKvC0
8jyPa/0AMsqd2CjQoAIjOUMSBReHkMRvoe7dgqpwsW272gu1EXROM9vo111V
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
r8ypLYmFLDRGuthjTpYCqTWnn1/YwUL/BzvfUVQ=
         "]]}, 
       Annotation[#, "Charting`Private`Tag$6996#1"]& ]}}, {
    DisplayFunction -> Identity, AspectRatio -> 1, Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2.5, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> Automatic, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], Method -> {"ScalingFunctions" -> None}, 
     PlotRange -> {{2.5, 9.999989445470021}, {-0.7071066209124272, 
      0.707106781186547}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.05], 
        Scaled[0.05]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"r", "(", "\[Lambda]", ")"}], ",", 
           RowBox[{"cos", "(", 
             RowBox[{"\[Theta]", "(", "\[Lambda]", ")"}], ")"}]}], "}"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"FaceForm", "[", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False]}], "]"}], "}"}], ",", 
           RowBox[{"{", 
             TagBox[#, HoldForm], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], 
     "]"}]& )]], \
"Output",ExpressionUUID->"80fceffb-ce32-42a4-9e0c-69e82ae01620"]
}, Open  ]],

Cell["\<\
ToDo: Show a resonant orbit and show how it changes as you change the orbital \
phases\
\>", "Text",ExpressionUUID->"94b329b3-680c-4bc7-b7b4-718e95314494"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical vs analytic evaluation", \
"Subsubsection",ExpressionUUID->"73be85bc-6f69-4cfd-bbfe-bf07773671b5"],

Cell["\<\
There are two methods for computing the orbital trajectory. The numerical \
method takes longer to compute the KerrGeoOrbitFunction but then that \
function is faster to evaluate. Conversely the analytic method is quick to \
compute the KerrGeoOrbitFunction but then that function is slower to evaluate/\
\>", "Text",ExpressionUUID->"0bba2918-000e-4689-8447-27c1c137a099"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{"orbitN", "=", 
   RowBox[{"KerrGeoOrbit", "[", 
    RowBox[{"0.99", ",", "4", ",", "0.6", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Pi]", "/", "4"}], "]"}]}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"orbitA", "=", 
   RowBox[{"KerrGeoOrbit", "[", 
    RowBox[{"0.99", ",", "4", ",", "0.6", ",", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Pi]", "/", "4"}], "]"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Analytic\>\""}]}], "]"}]}], 
  "]"}]}], "Input",ExpressionUUID->"55337a07-0238-44c9-858c-d289b6eb82eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.093833`", 
   ",", "\<\"KerrGeoOrbitFunction[0.99,4,0.6,0.707107,<<>>]\"\>"}], 
  "}"}]], "Output",ExpressionUUID->"2aae9650-658a-419e-b203-4a550be90726"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.007928`", 
   ",", "\<\"KerrGeoOrbitFunction[0.99,4,0.6,0.707107,<<>>]\"\>"}], 
  "}"}]], "Output",ExpressionUUID->"254d2598-328f-4a1f-a041-b27759d79c6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{"orbitN", "[", "10", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"orbitA", "[", "10", "]"}], 
  "]"}]}], "Input",ExpressionUUID->"cc967f83-f2c9-4533-80dd-007ea17a254c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000498`", ",", 
   RowBox[{"{", 
    RowBox[{
    "381.8461256276891`", ",", "2.710396131219928`", ",", 
     "1.414622931560359`", ",", "33.90697426482545`"}], "}"}]}], 
  "}"}]], "Output",ExpressionUUID->"478e9c66-8a51-47bb-8be2-cb0f9178d6e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.002889`", ",", 
   RowBox[{"{", 
    RowBox[{
    "381.84612562768916`", ",", "2.7103961312199267`", ",", 
     "1.4146229315603593`", ",", "33.90697426482546`"}], "}"}]}], 
  "}"}]], "Output",ExpressionUUID->"f6c57e9c-00da-4b2f-a134-b2d3e6d68950"]
}, Open  ]],

Cell["The numerical method is best for plotting the orbit", \
"Text",ExpressionUUID->"055c95ea-d2c2-4d64-8a06-3a4d047a0859"],

Cell[BoxData[
 RowBox[{"<<", 
  "KerrGeodesics`"}]], \
"Input",ExpressionUUID->"f56a53cc-2bde-42e4-863b-3239094b55b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "orbit", ",", "t", ",", "r", ",", "\[Theta]", ",", "\[Phi]", ",", 
       "stable", ",", "rmax"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"stable", "=", "False"}], ";", "\[IndentingNewLine]", 
      RowBox[{"rmax", "=", 
       FractionBox["p", 
        RowBox[{"1", "-", "e"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"p", ">", 
         RowBox[{"Quiet", "[", 
          RowBox[{"KerrGeoSeparatrix", "[", 
           RowBox[{"a", ",", "e", ",", "x"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"stable", "=", "True"}], ";", "\[IndentingNewLine]", 
         RowBox[{"orbit", "=", 
          RowBox[{"KerrGeoOrbit", "[", 
           RowBox[{"a", ",", "p", ",", "e", ",", "x"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], 
          "=", 
          RowBox[{"orbit", "[", "\"\<Trajectory\>\"", "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"r", "[", "\[Lambda]", "]"}], 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}], 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "\[Lambda]", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"r", "[", "\[Lambda]", "]"}], 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}], 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]", "[", "\[Lambda]", "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"r", "[", "\[Lambda]", "]"}], 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "\[Lambda]", "]"}], "]"}]}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", "0", ",", "10"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "rmax"}], ",", "rmax"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "rmax"}], ",", "rmax"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "rmax"}], ",", "rmax"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics3D", "[", 
         RowBox[{"Sphere", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"1", "+", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              SuperscriptBox["0.99", "2"]}], "]"}]}]}], "]"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "0.9"}], "}"}], ",", "0.000001", ",", "0.9999"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "10.1"}], "}"}], ",", "1", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e", ",", "0.5"}], "}"}], ",", "0.000001", ",", "0.8"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "0.5"}]}], "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"02d5a2ad-11f1-4aeb-8ea2-caa153db848d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.9, $CellContext`e$$ = 
    0.5, $CellContext`p$$ = 10.1, $CellContext`x$$ = -0.5, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 0.9}, 1.*^-6, 0.9999}, {{
       Hold[$CellContext`p$$], 10.1}, 1, 12}, {{
       Hold[$CellContext`e$$], 0.5}, 1.*^-6, 0.8}, {{
       Hold[$CellContext`x$$], -0.5}, -1, 1}}, Typeset`size$$ = {
    800., {442., 447.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$7232$$ = 
    0, $CellContext`p$7237$$ = 0, $CellContext`e$7238$$ = 
    0, $CellContext`x$7239$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.9, $CellContext`e$$ = 
        0.5, $CellContext`p$$ = 10.1, $CellContext`x$$ = -0.5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$7232$$, 0], 
        Hold[$CellContext`p$$, $CellContext`p$7237$$, 0], 
        Hold[$CellContext`e$$, $CellContext`e$7238$$, 0], 
        Hold[$CellContext`x$$, $CellContext`x$7239$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`orbit, $CellContext`t, $CellContext`r, \
$CellContext`\[Theta], $CellContext`\[Phi], $CellContext`stable, \
$CellContext`rmax}, $CellContext`stable = 
         False; $CellContext`rmax = $CellContext`p$$/(1 - $CellContext`e$$); 
        If[$CellContext`p$$ > Quiet[
            
            KerrGeodesics`KerrGeoSeparatrix[$CellContext`a$$, \
$CellContext`e$$, $CellContext`x$$]], $CellContext`stable = 
           True; $CellContext`orbit = 
           KerrGeodesics`KerrGeoOrbit[$CellContext`a$$, $CellContext`p$$, \
$CellContext`e$$, $CellContext`x$$]; {$CellContext`t, $CellContext`r, \
$CellContext`\[Theta], $CellContext`\[Phi]} = $CellContext`orbit[
            "Trajectory"]; 
          Null, {$CellContext`t, $CellContext`r, $CellContext`\[Theta], \
$CellContext`\[Phi]} = {0, 0, 0, 0}]; Show[
          ParametricPlot3D[{($CellContext`r[$CellContext`\[Lambda]] Sin[
               $CellContext`\[Theta][$CellContext`\[Lambda]]]) Cos[
              $CellContext`\[Phi][$CellContext`\[Lambda]]], \
($CellContext`r[$CellContext`\[Lambda]] Sin[
               $CellContext`\[Theta][$CellContext`\[Lambda]]]) Sin[
              $CellContext`\[Phi][$CellContext`\[Lambda]]], \
$CellContext`r[$CellContext`\[Lambda]] Cos[
              $CellContext`\[Theta][$CellContext`\[Lambda]]]}, {$CellContext`\
\[Lambda], 0, 10}, 
           PlotRange -> {{-$CellContext`rmax, $CellContext`rmax}, \
{-$CellContext`rmax, $CellContext`rmax}, {-$CellContext`rmax, \
$CellContext`rmax}}, ImageSize -> 800], 
          Graphics3D[
           Sphere[{0, 0, 0}, 1 + Sqrt[1 - 0.99^2]]]]], 
      "Specifications" :> {{{$CellContext`a$$, 0.9}, 1.*^-6, 
         0.9999}, {{$CellContext`p$$, 10.1}, 1, 12}, {{$CellContext`e$$, 0.5},
          1.*^-6, 0.8}, {{$CellContext`x$$, -0.5}, -1, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{845., {529., 535.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[
  1]]], "Output",ExpressionUUID->"92272241-2412-4056-af19-2e7ba8aff78e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Saveable->True,
WindowSize->{1393, 1201},
WindowMargins->{{-17, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"FileOutlineCache"->False,
"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
TrackCellChangeTimes->False,
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]

